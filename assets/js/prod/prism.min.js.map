{"version":3,"sources":["prism.js"],"names":["_self","window","WorkerGlobalScope","self","Prism","lang","uniqueId","_","manual","util","encode","tokens","Token","type","content","alias","map","replace","o","Object","prototype","toString","call","match","objId","obj","defineProperty","value","clone","key","hasOwnProperty","v","languages","extend","id","redef","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","this","callback","visited","i","plugins","highlightAll","async","env","selector","hooks","run","element","elements","document","querySelectorAll","highlightElement","language","parent","test","className","parentNode","toLowerCase","nodeName","code","textContent","Worker","worker","filename","onmessage","evt","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","delNum","exec","from","to","k","p","len","slice","after","args","push","wrapped","Array","splice","apply","rest","all","add","name","callbacks","matchedStr","join","tag","classes","attributes","aliases","keys","addEventListener","message","parse","close","script","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","module","exports","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","xml","html","mathml","svg","css","atrule","rule","url","string","property","important","function","style","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","function-variable","template-string","interpolation","interpolation-punctuation","js","abap","string-template","eol-comment","string-operator","token-operator","actionscript","ada","char","variable","apacheconf","directive-inline","directive-block","directive-block-parameter","directive-flags","apl","statement","system-function","constant","monadic-operator","dyadic-operator","assignment","dfn","applescript","class","c","macro","directive","quoted","interpreted","asciidoc","comment-block","table","specifiers","passthrough-block","literal-block","other-block","list-punctuation","list-label","indented-block","title","attribute-entry","hr","page-break","admonition","callout","inline","attribute-ref","italic","bold","replacement","line-continuation","aspnet","page-directive tag","directive tag","csharp","asp comment","asp script","autoit","autohotkey","builtin","symbol","insideString","bash","shebang","basic","parameter","batch","label","command","bison","delimiter","bison-variable","brainfuck","pointer","increment","decrement","branching","bro","cpp","generic-method","preprocessor","arduino","coffeescript","class-member","multiline-comment","block-regex","inline-javascript","multiline-string","ruby","pseudo-element","pseudo-class","attribute","hexcode","d","concat","token-string","register","dart","metadata","_django_template","django","jinja2","diff","coord","deleted","inserted","docker","dockerfile","eiffel","elixir","atom","capture","argument","forEach","erlang","quoted-function","quoted-atom","fsharp","fortran","quoted-number","gherkin","pystring","feature","scenario","table-body","outline","td","table-head","th","git","commit_sha1","glsl","go","graphql","groovy","spock-block","annotation","expression","haml","multiline-code","filter","filter-name","filters","all_filters","l","handlebars_pattern","handlebars","block","brackets","handlebars-comment","tokenStack","backupCode","indexOf","t","haskell","import_statement","hvariable","haxe","reification","http","request-line","response-status","header-name","httpLanguages","application/json","application/xml","text/xml","text/html","contentType","options","icon","builtin-keyword","inform7","substitution","verb","position","ini","adverb","conjunction","java","jolie","aggregates","withExtension","redirects","json","null","jsonp","julia","keyman","kotlin","raw-string","funcPattern","insideEqu","equation-command","latex","equation","headline","less","mixin-usage","livescript","interpolated-string","keyword-operator","identifier","lolcode","lua","makefile","markdown","blockquote","list","url-reference","matlab","mel","flag","mizar","monkey","type-char","n4js","n4jsd","nasm","nginx","nim","ignore","nix","antiquotation","nsis","objectivec","ocaml","opencl","function-opencl-kernel","constant-opencl-kernel","type-opencl-host","boolean-opencl-host","constant-opencl-host","function-opencl-host","oz","parigp","keywords","split","parser","escape","parser-comment","parser-punctuation","pascal","perl","filehandle","vstring","php","shell-comment","package","scope","powershell","processing","properties","protobuf","primitive","pug","multiline-script","multiline-plain-text","flow-control","each","branch","mixin","plain-text","puppet","heredoc","extended-regex","double-quoted","datatype","short-variable","pure","inline-lang","special","python","triple-quoted-string","q","datetime","qore","r","percent-operator","ellipsis","jsx","spread","jsxExpression","renpy","reason","character","constructor","substitution-def","link-target","field","command-line-option","literal-block-punctuation","quoted-literal-block","list-bullet","doctest-block","inline-literal","role","interpreted-text","link","rip","date","time","reference","roboconf","component","optional","wildcard","crystal","expansion","rust","macro-rules","closure-params","sas","datalines","sass","atrule-line","variable-line","property-line","scss","placeholder","scala","scheme","smalltalk","block-arguments","temporary-variables","smarty_pattern","smarty_litteral_mode","smarty","smarty-comment","sql","func","stylus","atrule-declaration","variable-declaration","property-declaration","swift","tcl","modifierRegex","modifierTokens","class-id","textile","phrase","block-tag","modifier","cite","span","link-ref","image","footnote","acronym","mark","nestedPatterns","twig","ld","rd","other","typescript","ts","vbnet","verilog","vhdl","vhdl-vectors","vim","wiki","block-comment","heading","emphasis","bold italic","table-tag","table-bar","nowiki","xojo","yaml","scalar"],"mappings":"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","file":"prism.min.js","sourcesContent":["/* http://prismjs.com/download.html?themes=prism-okaidia&languages=markup+css+clike+javascript+abap+actionscript+ada+apacheconf+apl+applescript+c+asciidoc+aspnet+autoit+autohotkey+bash+basic+batch+bison+brainfuck+bro+cpp+csharp+arduino+coffeescript+ruby+css-extras+d+dart+django+diff+docker+eiffel+elixir+erlang+fsharp+fortran+gherkin+git+glsl+go+graphql+groovy+haml+handlebars+haskell+haxe+http+icon+inform7+ini+j+java+jolie+json+julia+keyman+kotlin+latex+less+livescript+lolcode+lua+makefile+markdown+matlab+mel+mizar+monkey+n4js+nasm+nginx+nim+nix+nsis+objectivec+ocaml+opencl+oz+parigp+parser+pascal+perl+php+php-extras+powershell+processing+prolog+properties+protobuf+pug+puppet+pure+python+q+qore+r+jsx+renpy+reason+rest+rip+roboconf+crystal+rust+sas+sass+scss+scala+scheme+smalltalk+smarty+sql+stylus+swift+tcl+textile+twig+typescript+vbnet+verilog+vhdl+vim+wiki+xojo+yaml */\r\nvar _self = (typeof window !== 'undefined')\r\n\t? window   // if in browser\r\n\t: (\r\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\r\n\t\t? self // if in worker\r\n\t\t: {}   // if in node js\r\n\t);\r\n\r\n/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n\r\nvar Prism = (function(){\r\n\r\n// Private helper vars\r\nvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\r\nvar uniqueId = 0;\r\n\r\nvar _ = _self.Prism = {\r\n\tmanual: _self.Prism && _self.Prism.manual,\r\n\tutil: {\r\n\t\tencode: function (tokens) {\r\n\t\t\tif (tokens instanceof Token) {\r\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\r\n\t\t\t\treturn tokens.map(_.util.encode);\r\n\t\t\t} else {\r\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttype: function (o) {\r\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n\t\t},\r\n\r\n\t\tobjId: function (obj) {\r\n\t\t\tif (!obj['__id']) {\r\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\r\n\t\t\t}\r\n\t\t\treturn obj['__id'];\r\n\t\t},\r\n\r\n\t\t// Deep clone a language definition (e.g. to extend it)\r\n\t\tclone: function (o) {\r\n\t\t\tvar type = _.util.type(o);\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'Object':\r\n\t\t\t\t\tvar clone = {};\r\n\r\n\t\t\t\t\tfor (var key in o) {\r\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\r\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn clone;\r\n\r\n\t\t\t\tcase 'Array':\r\n\t\t\t\t\treturn o.map(function(v) { return _.util.clone(v); });\r\n\t\t\t}\r\n\r\n\t\t\treturn o;\r\n\t\t}\r\n\t},\r\n\r\n\tlanguages: {\r\n\t\textend: function (id, redef) {\r\n\t\t\tvar lang = _.util.clone(_.languages[id]);\r\n\r\n\t\t\tfor (var key in redef) {\r\n\t\t\t\tlang[key] = redef[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn lang;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Insert a token before another token in a language literal\r\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n\t\t * we cannot just provide an object, we need anobject and a key.\r\n\t\t * @param inside The key (or language id) of the parent\r\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\r\n\t\t * @param insert Object with the key/value pairs to insert\r\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n\t\t */\r\n\t\tinsertBefore: function (inside, before, insert, root) {\r\n\t\t\troot = root || _.languages;\r\n\t\t\tvar grammar = root[inside];\r\n\r\n\t\t\tif (arguments.length == 2) {\r\n\t\t\t\tinsert = arguments[1];\r\n\r\n\t\t\t\tfor (var newToken in insert) {\r\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\r\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn grammar;\r\n\t\t\t}\r\n\r\n\t\t\tvar ret = {};\r\n\r\n\t\t\tfor (var token in grammar) {\r\n\r\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\r\n\r\n\t\t\t\t\tif (token == before) {\r\n\r\n\t\t\t\t\t\tfor (var newToken in insert) {\r\n\r\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\r\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tret[token] = grammar[token];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update references in other language definitions\r\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\r\n\t\t\t\tif (value === root[inside] && key != inside) {\r\n\t\t\t\t\tthis[key] = ret;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn root[inside] = ret;\r\n\t\t},\r\n\r\n\t\t// Traverse a language definition with Depth First Search\r\n\t\tDFS: function(o, callback, type, visited) {\r\n\t\t\tvisited = visited || {};\r\n\t\t\tfor (var i in o) {\r\n\t\t\t\tif (o.hasOwnProperty(i)) {\r\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\r\n\r\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\r\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\r\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\r\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\r\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tplugins: {},\r\n\r\n\thighlightAll: function(async, callback) {\r\n\t\tvar env = {\r\n\t\t\tcallback: callback,\r\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\r\n\t\t};\r\n\r\n\t\t_.hooks.run(\"before-highlightall\", env);\r\n\r\n\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\r\n\r\n\t\tfor (var i=0, element; element = elements[i++];) {\r\n\t\t\t_.highlightElement(element, async === true, env.callback);\r\n\t\t}\r\n\t},\r\n\r\n\thighlightElement: function(element, async, callback) {\r\n\t\t// Find language\r\n\t\tvar language, grammar, parent = element;\r\n\r\n\t\twhile (parent && !lang.test(parent.className)) {\r\n\t\t\tparent = parent.parentNode;\r\n\t\t}\r\n\r\n\t\tif (parent) {\r\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\r\n\t\t\tgrammar = _.languages[language];\r\n\t\t}\r\n\r\n\t\t// Set language on the element, if not present\r\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n\t\t// Set language on the parent, for styling\r\n\t\tparent = element.parentNode;\r\n\r\n\t\tif (/pre/i.test(parent.nodeName)) {\r\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\t\t}\r\n\r\n\t\tvar code = element.textContent;\r\n\r\n\t\tvar env = {\r\n\t\t\telement: element,\r\n\t\t\tlanguage: language,\r\n\t\t\tgrammar: grammar,\r\n\t\t\tcode: code\r\n\t\t};\r\n\r\n\t\t_.hooks.run('before-sanity-check', env);\r\n\r\n\t\tif (!env.code || !env.grammar) {\r\n\t\t\tif (env.code) {\r\n\t\t\t\t_.hooks.run('before-highlight', env);\r\n\t\t\t\tenv.element.textContent = env.code;\r\n\t\t\t\t_.hooks.run('after-highlight', env);\r\n\t\t\t}\r\n\t\t\t_.hooks.run('complete', env);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_.hooks.run('before-highlight', env);\r\n\r\n\t\tif (async && _self.Worker) {\r\n\t\t\tvar worker = new Worker(_.filename);\r\n\r\n\t\t\tworker.onmessage = function(evt) {\r\n\t\t\t\tenv.highlightedCode = evt.data;\r\n\r\n\t\t\t\t_.hooks.run('before-insert', env);\r\n\r\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\r\n\r\n\t\t\t\tcallback && callback.call(env.element);\r\n\t\t\t\t_.hooks.run('after-highlight', env);\r\n\t\t\t\t_.hooks.run('complete', env);\r\n\t\t\t};\r\n\r\n\t\t\tworker.postMessage(JSON.stringify({\r\n\t\t\t\tlanguage: env.language,\r\n\t\t\t\tcode: env.code,\r\n\t\t\t\timmediateClose: true\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n\t\t\t_.hooks.run('before-insert', env);\r\n\r\n\t\t\tenv.element.innerHTML = env.highlightedCode;\r\n\r\n\t\t\tcallback && callback.call(element);\r\n\r\n\t\t\t_.hooks.run('after-highlight', env);\r\n\t\t\t_.hooks.run('complete', env);\r\n\t\t}\r\n\t},\r\n\r\n\thighlight: function (text, grammar, language) {\r\n\t\tvar tokens = _.tokenize(text, grammar);\r\n\t\treturn Token.stringify(_.util.encode(tokens), language);\r\n\t},\r\n\r\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\r\n\t\tvar Token = _.Token;\r\n\r\n\t\tfor (var token in grammar) {\r\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (token == target) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar patterns = grammar[token];\r\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\r\n\t\t\t\tvar pattern = patterns[j],\r\n\t\t\t\t\tinside = pattern.inside,\r\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\r\n\t\t\t\t\tgreedy = !!pattern.greedy,\r\n\t\t\t\t\tlookbehindLength = 0,\r\n\t\t\t\t\talias = pattern.alias;\r\n\r\n\t\t\t\tif (greedy && !pattern.pattern.global) {\r\n\t\t\t\t\t// Without the global flag, lastIndex won't work\r\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\r\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpattern = pattern.pattern || pattern;\r\n\r\n\t\t\t\t// Don’t cache length as it changes during the loop\r\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\r\n\r\n\t\t\t\t\tvar str = strarr[i];\r\n\r\n\t\t\t\t\tif (strarr.length > text.length) {\r\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (str instanceof Token) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpattern.lastIndex = 0;\r\n\r\n\t\t\t\t\tvar match = pattern.exec(str),\r\n\t\t\t\t\t    delNum = 1;\r\n\r\n\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\r\n\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\r\n\t\t\t\t\t\tpattern.lastIndex = pos;\r\n\t\t\t\t\t\tmatch = pattern.exec(text);\r\n\t\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\r\n\t\t\t\t\t\t    to = match.index + match[0].length,\r\n\t\t\t\t\t\t    k = i,\r\n\t\t\t\t\t\t    p = pos;\r\n\r\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\r\n\t\t\t\t\t\t\tp += strarr[k].length;\r\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\r\n\t\t\t\t\t\t\tif (from >= p) {\r\n\t\t\t\t\t\t\t\t++i;\r\n\t\t\t\t\t\t\t\tpos = p;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\r\n\t\t\t\t\t\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\r\n\t\t\t\t\t\tdelNum = k - i;\r\n\t\t\t\t\t\tstr = text.slice(pos, p);\r\n\t\t\t\t\t\tmatch.index -= pos;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\tif (oneshot) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(lookbehind) {\r\n\t\t\t\t\t\tlookbehindLength = match[1].length;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar from = match.index + lookbehindLength,\r\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\r\n\t\t\t\t\t    to = from + match.length,\r\n\t\t\t\t\t    before = str.slice(0, from),\r\n\t\t\t\t\t    after = str.slice(to);\r\n\r\n\t\t\t\t\tvar args = [i, delNum];\r\n\r\n\t\t\t\t\tif (before) {\r\n\t\t\t\t\t\t++i;\r\n\t\t\t\t\t\tpos += before.length;\r\n\t\t\t\t\t\targs.push(before);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\r\n\r\n\t\t\t\t\targs.push(wrapped);\r\n\r\n\t\t\t\t\tif (after) {\r\n\t\t\t\t\t\targs.push(after);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\r\n\r\n\t\t\t\t\tif (delNum != 1)\r\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\r\n\r\n\t\t\t\t\tif (oneshot)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\ttokenize: function(text, grammar, language) {\r\n\t\tvar strarr = [text];\r\n\r\n\t\tvar rest = grammar.rest;\r\n\r\n\t\tif (rest) {\r\n\t\t\tfor (var token in rest) {\r\n\t\t\t\tgrammar[token] = rest[token];\r\n\t\t\t}\r\n\r\n\t\t\tdelete grammar.rest;\r\n\t\t}\r\n\r\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\r\n\r\n\t\treturn strarr;\r\n\t},\r\n\r\n\thooks: {\r\n\t\tall: {},\r\n\r\n\t\tadd: function (name, callback) {\r\n\t\t\tvar hooks = _.hooks.all;\r\n\r\n\t\t\thooks[name] = hooks[name] || [];\r\n\r\n\t\t\thooks[name].push(callback);\r\n\t\t},\r\n\r\n\t\trun: function (name, env) {\r\n\t\t\tvar callbacks = _.hooks.all[name];\r\n\r\n\t\t\tif (!callbacks || !callbacks.length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\r\n\t\t\t\tcallback(env);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\r\n\tthis.type = type;\r\n\tthis.content = content;\r\n\tthis.alias = alias;\r\n\t// Copy of the full string this token was created from\r\n\tthis.length = (matchedStr || \"\").length|0;\r\n\tthis.greedy = !!greedy;\r\n};\r\n\r\nToken.stringify = function(o, language, parent) {\r\n\tif (typeof o == 'string') {\r\n\t\treturn o;\r\n\t}\r\n\r\n\tif (_.util.type(o) === 'Array') {\r\n\t\treturn o.map(function(element) {\r\n\t\t\treturn Token.stringify(element, language, o);\r\n\t\t}).join('');\r\n\t}\r\n\r\n\tvar env = {\r\n\t\ttype: o.type,\r\n\t\tcontent: Token.stringify(o.content, language, parent),\r\n\t\ttag: 'span',\r\n\t\tclasses: ['token', o.type],\r\n\t\tattributes: {},\r\n\t\tlanguage: language,\r\n\t\tparent: parent\r\n\t};\r\n\r\n\tif (o.alias) {\r\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n\t\tArray.prototype.push.apply(env.classes, aliases);\r\n\t}\r\n\r\n\t_.hooks.run('wrap', env);\r\n\r\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\r\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\r\n\t}).join(' ');\r\n\r\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\r\n\r\n};\r\n\r\nif (!_self.document) {\r\n\tif (!_self.addEventListener) {\r\n\t\t// in Node.js\r\n\t\treturn _self.Prism;\r\n\t}\r\n \t// In worker\r\n\t_self.addEventListener('message', function(evt) {\r\n\t\tvar message = JSON.parse(evt.data),\r\n\t\t    lang = message.language,\r\n\t\t    code = message.code,\r\n\t\t    immediateClose = message.immediateClose;\r\n\r\n\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\r\n\t\tif (immediateClose) {\r\n\t\t\t_self.close();\r\n\t\t}\r\n\t}, false);\r\n\r\n\treturn _self.Prism;\r\n}\r\n\r\n//Get current script and highlight\r\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\r\n\r\nif (script) {\r\n\t_.filename = script.src;\r\n\r\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\r\n\t\tif(document.readyState !== \"loading\") {\r\n\t\t\tif (window.requestAnimationFrame) {\r\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\r\n\t\t\t} else {\r\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nreturn _self.Prism;\r\n\r\n})();\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n\tmodule.exports = Prism;\r\n}\r\n\r\n// hack for components to work correctly in node.js\r\nif (typeof global !== 'undefined') {\r\n\tglobal.Prism = Prism;\r\n}\r\n;\r\nPrism.languages.markup = {\r\n\t'comment': /<!--[\\s\\S]*?-->/,\r\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\r\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\r\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\r\n\t'tag': {\r\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\r\n\t\tinside: {\r\n\t\t\t'tag': {\r\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^<\\/?/,\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'attr-value': {\r\n\t\t\t\tpattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': [\r\n\t\t\t\t\t\t/^=/,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpattern: /(^|[^\\\\])[\"']/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\/?>/,\r\n\t\t\t'attr-name': {\r\n\t\t\t\tpattern: /[^\\s>\\/]+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\t'entity': /&#?[\\da-z]{1,8};/i\r\n};\r\n\r\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\r\n\tPrism.languages.markup['entity'];\r\n\r\n// Plugin to make entity title show the real entity, idea by Roman Komarov\r\nPrism.hooks.add('wrap', function(env) {\r\n\r\n\tif (env.type === 'entity') {\r\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\r\n\t}\r\n});\r\n\r\nPrism.languages.xml = Prism.languages.markup;\r\nPrism.languages.html = Prism.languages.markup;\r\nPrism.languages.mathml = Prism.languages.markup;\r\nPrism.languages.svg = Prism.languages.markup;\r\n\r\nPrism.languages.css = {\r\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\r\n\t'atrule': {\r\n\t\tpattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\r\n\t\tinside: {\r\n\t\t\t'rule': /@[\\w-]+/\r\n\t\t\t// See rest below\r\n\t\t}\r\n\t},\r\n\t'url': /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\r\n\t'selector': /[^{}\\s][^{};]*?(?=\\s*\\{)/,\r\n\t'string': {\r\n\t\tpattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'property': /[\\w-]+(?=\\s*:)/i,\r\n\t'important': /\\B!important\\b/i,\r\n\t'function': /[-a-z0-9]+(?=\\()/i,\r\n\t'punctuation': /[(){};:]/\r\n};\r\n\r\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\r\n\r\nif (Prism.languages.markup) {\r\n\tPrism.languages.insertBefore('markup', 'tag', {\r\n\t\t'style': {\r\n\t\t\tpattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.css,\r\n\t\t\talias: 'language-css'\r\n\t\t}\r\n\t});\r\n\t\r\n\tPrism.languages.insertBefore('inside', 'attr-value', {\r\n\t\t'style-attr': {\r\n\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\r\n\t\t\tinside: {\r\n\t\t\t\t'attr-name': {\r\n\t\t\t\t\tpattern: /^\\s*style/i,\r\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\r\n\t\t\t\t},\r\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\r\n\t\t\t\t'attr-value': {\r\n\t\t\t\t\tpattern: /.+/i,\r\n\t\t\t\t\tinside: Prism.languages.css\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\talias: 'language-css'\r\n\t\t}\r\n\t}, Prism.languages.markup.tag);\r\n};\r\nPrism.languages.clike = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'class-name': {\r\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\tpunctuation: /[.\\\\]/\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\t'function': /[a-z0-9_]+(?=\\()/i,\r\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\r\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\r\n\t'punctuation': /[{}[\\];(),.:]/\r\n};\r\n\r\nPrism.languages.javascript = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\r\n\t'number': /\\b-?(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\r\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\r\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\s*\\()/i,\r\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\r\n});\r\n\r\nPrism.languages.insertBefore('javascript', 'keyword', {\r\n\t'regex': {\r\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true\r\n\t},\r\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\r\n\t'function-variable': {\r\n\t\tpattern: /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)\\s*=>))/i,\r\n\t\talias: 'function'\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('javascript', 'string', {\r\n\t'template-string': {\r\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation-punctuation': {\r\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\r\n\t\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t\t},\r\n\t\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': /[\\s\\S]+/\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (Prism.languages.markup) {\r\n\tPrism.languages.insertBefore('markup', 'tag', {\r\n\t\t'script': {\r\n\t\t\tpattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript,\r\n\t\t\talias: 'language-javascript'\r\n\t\t}\r\n\t});\r\n}\r\n\r\nPrism.languages.js = Prism.languages.javascript;\r\n\r\nPrism.languages.abap = {\r\n\t'comment': /^\\*.*/m,\r\n\t'string' : /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\r\n\t'string-template': {\r\n\t\tpattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'string'\r\n\t},\r\n\t/* End Of Line comments should not interfere with strings when the  \r\n\tquote character occurs within them. We assume a string being highlighted\r\n\tinside an EOL comment is more acceptable than the opposite.\r\n\t*/\r\n\t'eol-comment': {\r\n\t\tpattern: /(^|\\s)\".*/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'comment'\r\n\t},\r\n\t'keyword' : {\r\n\t\tpattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\r\n\t\tlookbehind: true\r\n\t},\r\n\t/* Numbers can be only integers. Decimal or Hex appear only as strings */\r\n\t'number' : /\\b\\d+\\b/,\r\n\t/* Operators must always be surrounded by whitespace, they cannot be put \r\n\tadjacent to operands. \r\n\t*/\r\n\t'operator' : {\r\n\t\tpattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string-operator' : {\r\n\t\tpattern: /(\\s)&&?(?=\\s)/,\r\n\t\tlookbehind: true,\r\n\t\t/* The official editor highlights */\r\n\t\talias: \"keyword\"\r\n\t},\r\n\t'token-operator' : [{\r\n\t\t/* Special operators used to access structure components, class methods/attributes, etc. */\r\n\t\tpattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\r\n\t\tlookbehind: true,\r\n\t\talias: \"punctuation\"\r\n\t}, {\r\n\t    /* Special tokens used do delimit string templates */\r\n\t    pattern: /[|{}]/,\r\n\t\talias: \"punctuation\"\r\n\t}],\r\n\t'punctuation' : /[,.:()]/\r\n};\r\nPrism.languages.actionscript = Prism.languages.extend('javascript',  {\r\n\t'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\r\n\t'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\r\n});\r\nPrism.languages.actionscript['class-name'].alias = 'function';\r\n\r\nif (Prism.languages.markup) {\r\n\tPrism.languages.insertBefore('actionscript', 'string', {\r\n\t\t'xml': {\r\n\t\t\tpattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\trest: Prism.languages.markup\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\nPrism.languages.ada = {\r\n\t'comment': /--.*/,\r\n\t'string': /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\r\n\t'number': [\r\n\t\t{\r\n\t\t\tpattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\r\n\t\t}\r\n\t],\r\n\t'attr-name': /\\b'\\w+/i,\r\n\t'keyword': /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\r\n\t'boolean': /\\b(?:true|false)\\b/i,\r\n\t'operator': /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\r\n\t'punctuation': /\\.\\.?|[,;():]/,\r\n\t'char': /'.'/,\r\n\t'variable': /\\b[a-z](?:[_a-z\\d])*\\b/i\r\n};\r\nPrism.languages.apacheconf = {\r\n\t'comment': /#.*/,\r\n\t'directive-inline': {\r\n\t\tpattern: /^(\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/mi,\r\n\t\tlookbehind: true,\r\n\t\talias: 'property'\r\n\t},\r\n\t'directive-block': {\r\n\t\tpattern: /<\\/?\\b(?:AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\r\n\t\tinside: {\r\n\t\t\t'directive-block': {\r\n\t\t\t\tpattern: /^<\\/?\\w+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^<\\/?/\r\n\t\t\t\t},\r\n\t\t\t\talias: 'tag'\r\n\t\t\t},\r\n\t\t\t'directive-block-parameter': {\r\n\t\t\t\tpattern: /.*[^>]/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /:/,\r\n\t\t\t\t\t'string': {\r\n\t\t\t\t\t\tpattern: /(\"|').*\\1/,\r\n\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\talias: 'attr-value'\r\n\t\t\t},\r\n\t\t\t'punctuation': />/\r\n\t\t},\r\n\t\talias: 'tag'\r\n\t},\r\n\t'directive-flags': {\r\n\t\tpattern: /\\[(?:\\w,?)+\\]/,\r\n\t\talias: 'keyword'\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /(\"|').*\\1/,\r\n\t\tinside: {\r\n\t\t\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\r\n\t\t}\r\n\t},\r\n\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\r\n\t'regex': /\\^?.*\\$|\\^.*\\$?/\r\n};\r\n\r\nPrism.languages.apl = {\r\n\t'comment': /(?:⍝|#[! ]).*$/m,\r\n\t'string': {\r\n\t\tpattern: /'(?:[^'\\r\\n]|'')*'/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,\r\n\t'statement': /:[A-Z][a-z][A-Za-z]*\\b/,\r\n\t'system-function': {\r\n\t\tpattern: /⎕[A-Z]+/i,\r\n\t\talias: 'function'\r\n\t},\r\n\t'constant': /[⍬⌾#⎕⍞]/,\r\n\t'function': /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\r\n\t'monadic-operator': {\r\n\t\tpattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'dyadic-operator': {\r\n\t\tpattern: /[.⍣⍠⍤∘⌸@⌺]/,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'assignment': {\r\n\t\tpattern: /←/,\r\n\t\talias: 'keyword'\r\n\t},\r\n\t'punctuation': /[\\[;\\]()◇⋄]/,\r\n\t'dfn': {\r\n\t\tpattern: /[{}⍺⍵⍶⍹∇⍫:]/,\r\n\t\talias: 'builtin'\r\n\t}\r\n};\r\nPrism.languages.applescript = {\r\n\t'comment': [\r\n\t\t// Allow one level of nesting\r\n\t\t/\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/,\r\n\t\t/--.+/,\r\n\t\t/#.+/\r\n\t],\r\n\t'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n\t'number': /\\b-?\\d*\\.?\\d+([Ee]-?\\d+)?\\b/,\r\n\t'operator': [\r\n\t\t/[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\r\n\t\t/\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/\r\n\t],\r\n\t'keyword': /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\r\n\t'class': {\r\n\t\tpattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\r\n\t\talias: 'builtin'\r\n\t},\r\n\t'punctuation': /[{}():,¬«»《》]/\r\n};\r\nPrism.languages.c = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\r\n\t'operator': /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\r\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)[ful]*\\b/i\r\n});\r\n\r\nPrism.languages.insertBefore('c', 'string', {\r\n\t'macro': {\r\n\t\t// allow for multiline macro definitions\r\n\t\t// spaces after the # character compile fine with gcc\r\n\t\tpattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\r\n\t\tlookbehind: true,\r\n\t\talias: 'property',\r\n\t\tinside: {\r\n\t\t\t// highlight the path of the include statement as a string\r\n\t\t\t'string': {\r\n\t\t\t\tpattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t// highlight macro directives as keywords\r\n\t\t\t'directive': {\r\n\t\t\t\tpattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'keyword'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t// highlight predefined macros as constants\r\n\t'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\r\n});\r\n\r\ndelete Prism.languages.c['class-name'];\r\ndelete Prism.languages.c['boolean'];\r\n\r\n(function (Prism) {\r\n\r\n\tvar attributes = {\r\n\t\tpattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'quoted': {\r\n\t\t\t\tpattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^[$`]|[$`]$/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'interpreted': {\r\n\t\t\t\tpattern: /'(?:[^'\\\\]|\\\\.)*'/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^'|'$/\r\n\t\t\t\t\t// See rest below\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n\t\t\t'variable': /\\w+(?==)/,\r\n\t\t\t'punctuation': /^\\[|\\]$|,/,\r\n\t\t\t'operator': /=/,\r\n\t\t\t// The negative look-ahead prevents blank matches\r\n\t\t\t'attr-value': /(?!^\\s+$).+/\r\n\t\t}\r\n\t};\r\n\tPrism.languages.asciidoc = {\r\n\t\t'comment-block': {\r\n\t\t\tpattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\r\n\t\t\talias: 'comment'\r\n\t\t},\r\n\t\t'table': {\r\n\t\t\tpattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\r\n\t\t\tinside: {\r\n\t\t\t\t'specifiers': {\r\n\t\t\t\t\tpattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\r\n\t\t\t\t\talias: 'attr-value'\r\n\t\t\t\t},\r\n\t\t\t\t'punctuation': {\r\n\t\t\t\t\tpattern: /(^|[^\\\\])[|!]=*/,\r\n\t\t\t\t\tlookbehind: true\r\n\t\t\t\t}\r\n\t\t\t\t// See rest below\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'passthrough-block': {\r\n\t\t\tpattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^\\++|\\++$/\r\n\t\t\t\t// See rest below\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Literal blocks and listing blocks\r\n\t\t'literal-block': {\r\n\t\t\tpattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^(?:-+|\\.+)|(?:-+|\\.+)$/\r\n\t\t\t\t// See rest below\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Sidebar blocks, quote blocks, example blocks and open blocks\r\n\t\t'other-block': {\r\n\t\t\tpattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\r\n\t\t\t\t// See rest below\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// list-punctuation and list-label must appear before indented-block\r\n\t\t'list-punctuation': {\r\n\t\t\tpattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'punctuation'\r\n\t\t},\r\n\t\t'list-label': {\r\n\t\t\tpattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'symbol'\r\n\t\t},\r\n\t\t'indented-block': {\r\n\t\t\tpattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\r\n\t\t'comment': /^\\/\\/.*/m,\r\n\t\t'title': {\r\n\t\t\tpattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\r\n\t\t\talias: 'important',\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\r\n\t\t\t\t// See rest below\r\n\t\t\t}\r\n\t\t},\r\n\t\t'attribute-entry': {\r\n\t\t\tpattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\r\n\t\t\talias: 'tag'\r\n\t\t},\r\n\t\t'attributes': attributes,\r\n\t\t'hr': {\r\n\t\t\tpattern: /^'{3,}$/m,\r\n\t\t\talias: 'punctuation'\r\n\t\t},\r\n\t\t'page-break': {\r\n\t\t\tpattern: /^<{3,}$/m,\r\n\t\t\talias: 'punctuation'\r\n\t\t},\r\n\t\t'admonition': {\r\n\t\t\tpattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\r\n\t\t\talias: 'keyword'\r\n\t\t},\r\n\t\t'callout': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /(^[ \\t]*)<?\\d*>/m,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'symbol'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /<\\d+>/,\r\n\t\t\t\talias: 'symbol'\r\n\t\t\t}\r\n\t\t],\r\n\t\t'macro': {\r\n\t\t\tpattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\r\n\t\t\tinside: {\r\n\t\t\t\t'function': /^[a-z\\d-]+(?=:)/,\r\n\t\t\t\t'punctuation': /^::?/,\r\n\t\t\t\t'attributes': {\r\n\t\t\t\t\tpattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\r\n\t\t\t\t\tinside: attributes.inside\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'inline': {\r\n\t\t\t/*\r\n\t\t\tThe initial look-behind prevents the highlighting of escaped quoted text.\r\n\r\n\t\t\tQuoted text can be multi-line but cannot span an empty line.\r\n\t\t\tAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\r\n\r\n\t\t\tFirst, we handle the constrained quotes.\r\n\t\t\tThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\r\n\t\t\tThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\r\n\r\n\t\t\tThen we handle the unconstrained quotes.\r\n\t\t\tThose do not have the restrictions of the constrained quotes.\r\n\t\t\tThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\r\n\t\t\t */\r\n\t\t\tpattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'attributes': attributes,\r\n\t\t\t\t'url': {\r\n\t\t\t\t\tpattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'punctuation': /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'attribute-ref': {\r\n\t\t\t\t\tpattern: /^\\{.+\\}$/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'variable': {\r\n\t\t\t\t\t\t\tpattern: /(^\\{)[a-z\\d,+_-]+/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'operator': /^[=?!#%@$]|!(?=[:}])/,\r\n\t\t\t\t\t\t'punctuation': /^\\{|\\}$|::?/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'italic': {\r\n\t\t\t\t\tpattern: /^(['_])[\\s\\S]+\\1$/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'punctuation': /^(?:''?|__?)|(?:''?|__?)$/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'bold': {\r\n\t\t\t\t\tpattern: /^\\*[\\s\\S]+\\*$/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\tpunctuation: /^\\*\\*?|\\*\\*?$/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'punctuation': /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\r\n\t\t\t}\r\n\t\t},\r\n\t\t'replacement': {\r\n\t\t\tpattern: /\\((?:C|TM|R)\\)/,\r\n\t\t\talias: 'builtin'\r\n\t\t},\r\n\t\t'entity': /&#?[\\da-z]{1,8};/i,\r\n\t\t'line-continuation': {\r\n\t\t\tpattern: /(^| )\\+$/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'punctuation'\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t// Allow some nesting. There is no recursion though, so cloning should not be needed.\r\n\r\n\tattributes.inside['interpreted'].inside.rest = {\r\n\t\t'macro': Prism.languages.asciidoc['macro'],\r\n\t\t'inline': Prism.languages.asciidoc['inline'],\r\n\t\t'replacement': Prism.languages.asciidoc['replacement'],\r\n\t\t'entity': Prism.languages.asciidoc['entity']\r\n\t};\r\n\r\n\tPrism.languages.asciidoc['passthrough-block'].inside.rest = {\r\n\t\t'macro': Prism.languages.asciidoc['macro']\r\n\t};\r\n\r\n\tPrism.languages.asciidoc['literal-block'].inside.rest = {\r\n\t\t'callout': Prism.languages.asciidoc['callout']\r\n\t};\r\n\r\n\tPrism.languages.asciidoc['table'].inside.rest = {\r\n\t\t'comment-block': Prism.languages.asciidoc['comment-block'],\r\n\t\t'passthrough-block': Prism.languages.asciidoc['passthrough-block'],\r\n\t\t'literal-block': Prism.languages.asciidoc['literal-block'],\r\n\t\t'other-block': Prism.languages.asciidoc['other-block'],\r\n\t\t'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\r\n\t\t'indented-block': Prism.languages.asciidoc['indented-block'],\r\n\t\t'comment': Prism.languages.asciidoc['comment'],\r\n\t\t'title': Prism.languages.asciidoc['title'],\r\n\t\t'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\r\n\t\t'attributes': Prism.languages.asciidoc['attributes'],\r\n\t\t'hr': Prism.languages.asciidoc['hr'],\r\n\t\t'page-break': Prism.languages.asciidoc['page-break'],\r\n\t\t'admonition': Prism.languages.asciidoc['admonition'],\r\n\t\t'list-label': Prism.languages.asciidoc['list-label'],\r\n\t\t'callout': Prism.languages.asciidoc['callout'],\r\n\t\t'macro': Prism.languages.asciidoc['macro'],\r\n\t\t'inline': Prism.languages.asciidoc['inline'],\r\n\t\t'replacement': Prism.languages.asciidoc['replacement'],\r\n\t\t'entity': Prism.languages.asciidoc['entity'],\r\n\t\t'line-continuation': Prism.languages.asciidoc['line-continuation']\r\n\t};\r\n\r\n\tPrism.languages.asciidoc['other-block'].inside.rest = {\r\n\t\t'table': Prism.languages.asciidoc['table'],\r\n\t\t'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\r\n\t\t'indented-block': Prism.languages.asciidoc['indented-block'],\r\n\t\t'comment': Prism.languages.asciidoc['comment'],\r\n\t\t'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\r\n\t\t'attributes': Prism.languages.asciidoc['attributes'],\r\n\t\t'hr': Prism.languages.asciidoc['hr'],\r\n\t\t'page-break': Prism.languages.asciidoc['page-break'],\r\n\t\t'admonition': Prism.languages.asciidoc['admonition'],\r\n\t\t'list-label': Prism.languages.asciidoc['list-label'],\r\n\t\t'macro': Prism.languages.asciidoc['macro'],\r\n\t\t'inline': Prism.languages.asciidoc['inline'],\r\n\t\t'replacement': Prism.languages.asciidoc['replacement'],\r\n\t\t'entity': Prism.languages.asciidoc['entity'],\r\n\t\t'line-continuation': Prism.languages.asciidoc['line-continuation']\r\n\t};\r\n\r\n\tPrism.languages.asciidoc['title'].inside.rest = {\r\n\t\t'macro': Prism.languages.asciidoc['macro'],\r\n\t\t'inline': Prism.languages.asciidoc['inline'],\r\n\t\t'replacement': Prism.languages.asciidoc['replacement'],\r\n\t\t'entity': Prism.languages.asciidoc['entity']\r\n\t};\r\n\r\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\r\n\tPrism.hooks.add('wrap', function(env) {\r\n\t\tif (env.type === 'entity') {\r\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\r\n\t\t}\r\n\t});\r\n}(Prism));\r\nPrism.languages.aspnet = Prism.languages.extend('markup', {\r\n\t'page-directive tag': {\r\n\t\tpattern: /<%\\s*@.*%>/i,\r\n\t\tinside: {\r\n\t\t\t'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\r\n\t\t\trest: Prism.languages.markup.tag.inside\r\n\t\t}\r\n\t},\r\n\t'directive tag': {\r\n\t\tpattern: /<%.*%>/i,\r\n\t\tinside: {\r\n\t\t\t'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\r\n\t\t\trest: Prism.languages.csharp\r\n\t\t}\r\n\t}\r\n});\r\n// Regexp copied from prism-markup, with a negative look-ahead added\r\nPrism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\r\n\r\n// match directives of attribute value foo=\"<% Bar %>\"\r\nPrism.languages.insertBefore('inside', 'punctuation', {\r\n\t'directive tag': Prism.languages.aspnet['directive tag']\r\n}, Prism.languages.aspnet.tag.inside[\"attr-value\"]);\r\n\r\nPrism.languages.insertBefore('aspnet', 'comment', {\r\n\t'asp comment': /<%--[\\s\\S]*?--%>/\r\n});\r\n\r\n// script runat=\"server\" contains csharp, not javascript\r\nPrism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\r\n\t'asp script': {\r\n\t\tpattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\r\n\t\tlookbehind: true,\r\n\t\tinside: Prism.languages.csharp || {}\r\n\t}\r\n});\r\nPrism.languages.autoit = {\r\n\t\"comment\": [\r\n\t\t/;.*/,\r\n\t\t{\r\n\t\t\t// The multi-line comments delimiters can actually be commented out with \";\"\r\n\t\t\tpattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t\"url\": {\r\n\t\tpattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t\"string\": {\r\n\t\tpattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t\"variable\": /([%$@])\\w+\\1/\r\n\t\t}\r\n\t},\r\n\t\"directive\": {\r\n\t\tpattern: /(^\\s*)#\\w+/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'keyword'\r\n\t},\r\n\t\"function\": /\\b\\w+(?=\\()/,\r\n\t// Variables and macros\r\n\t\"variable\": /[$@]\\w+/,\r\n\t\"keyword\": /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\r\n\t\"number\": /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\r\n\t\"boolean\": /\\b(?:True|False)\\b/i,\r\n\t\"operator\": /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\r\n\t\"punctuation\": /[\\[\\]().,:]/\r\n};\r\n// NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\r\nPrism.languages.autohotkey= {\r\n\t'comment': {\r\n\t\tpattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string': /\"(?:[^\"\\n\\r]|\"\")*\"/m,\r\n\t'function': /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,  //function - don't use .*\\) in the end bcoz string locks it\r\n\t'tag': /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m,  //labels\r\n\t'variable': /%\\w+%/,\r\n\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee]-?\\d+)?)\\b/,\r\n\t'operator': /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\r\n\t'punctuation': /[{}[\\]():,]/,\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\r\n\t'selector': /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\r\n\r\n\t'constant': /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\r\n\r\n\t'builtin': /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\r\n\r\n\t'symbol': /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\r\n\r\n\t'important': /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\r\n\r\n\t'keyword': /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\r\n};\r\n(function(Prism) {\r\n\tvar insideString = {\r\n\t\tvariable: [\r\n\t\t\t// Arithmetic Environment\r\n\t\t\t{\r\n\t\t\t\tpattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\r\n\t\t\t\t\tvariable: [{\r\n\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t/^\\$\\(\\(/\r\n\t\t\t\t\t],\r\n\t\t\t\t\tnumber: /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee]-?\\d+)?)\\b/,\r\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\r\n\t\t\t\t\toperator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\r\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\r\n\t\t\t\t\tpunctuation: /\\(\\(?|\\)\\)?|,|;/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Command Substitution\r\n\t\t\t{\r\n\t\t\t\tpattern: /\\$\\([^)]+\\)|`[^`]+`/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\tvariable: /^\\$\\(|^`|\\)$|`$/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i\r\n\t\t]\r\n\t};\r\n\r\n\tPrism.languages.bash = {\r\n\t\t'shebang': {\r\n\t\t\tpattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\r\n\t\t\talias: 'important'\r\n\t\t},\r\n\t\t'comment': {\r\n\t\t\tpattern: /(^|[^\"{\\\\])#.*/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'string': [\r\n\t\t\t//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\r\n\t\t\t{\r\n\t\t\t\tpattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: insideString\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: insideString\r\n\t\t\t}\r\n\t\t],\r\n\t\t'variable': insideString.variable,\r\n\t\t// Originally based on http://ss64.com/bash/\r\n\t\t'function': {\r\n\t\t\tpattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'keyword': {\r\n\t\t\tpattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'boolean': {\r\n\t\t\tpattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\r\n\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\r\n\t};\r\n\r\n\tvar inside = insideString.variable[1].inside;\r\n\tinside['function'] = Prism.languages.bash['function'];\r\n\tinside.keyword = Prism.languages.bash.keyword;\r\n\tinside.boolean = Prism.languages.bash.boolean;\r\n\tinside.operator = Prism.languages.bash.operator;\r\n\tinside.punctuation = Prism.languages.bash.punctuation;\r\n})(Prism);\r\n\r\nPrism.languages.basic = {\r\n\t'string': /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\r\n\t'comment': {\r\n\t\tpattern: /(?:!|REM\\b).+/i,\r\n\t\tinside: {\r\n\t\t\t'keyword': /^REM/i\r\n\t\t}\r\n\t},\r\n\t'number': /(?:\\b|\\B[.-])(?:\\d+\\.?\\d*)(?:E[+-]?\\d+)?/i,\r\n\t'keyword': /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\r\n\t'function': /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\r\n\t'operator': /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\r\n\t'punctuation': /[,;:()]/\r\n};\r\n(function (Prism) {\r\n\tvar variable = /%%?[~:\\w]+%?|!\\S+!/;\r\n\tvar parameter = {\r\n\t\tpattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\r\n\t\talias: 'attr-name',\r\n\t\tinside: {\r\n\t\t\t'punctuation': /:/\r\n\t\t}\r\n\t};\r\n\tvar string = /\"[^\"]*\"/;\r\n\tvar number = /(?:\\b|-)\\d+\\b/;\r\n\r\n\tPrism.languages.batch = {\r\n\t\t'comment': [\r\n\t\t\t/^::.*/m,\r\n\t\t\t{\r\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t}\r\n\t\t],\r\n\t\t'label': {\r\n\t\t\tpattern: /^:.*/m,\r\n\t\t\talias: 'property'\r\n\t\t},\r\n\t\t'command': [\r\n\t\t\t{\r\n\t\t\t\t// FOR command\r\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'keyword': /^for\\b|\\b(?:in|do)\\b/i,\r\n\t\t\t\t\t'string': string,\r\n\t\t\t\t\t'parameter': parameter,\r\n\t\t\t\t\t'variable': variable,\r\n\t\t\t\t\t'number': number,\r\n\t\t\t\t\t'punctuation': /[()',]/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// IF command\r\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\r\n\t\t\t\t\t'string': string,\r\n\t\t\t\t\t'parameter': parameter,\r\n\t\t\t\t\t'variable': variable,\r\n\t\t\t\t\t'number': number,\r\n\t\t\t\t\t'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// ELSE command\r\n\t\t\t\tpattern: /((?:^|[&()])[ \\t]*)else\\b/im,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'keyword': /^else\\b/i\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// SET command\r\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'keyword': /^set\\b/i,\r\n\t\t\t\t\t'string': string,\r\n\t\t\t\t\t'parameter': parameter,\r\n\t\t\t\t\t'variable': [\r\n\t\t\t\t\t\tvariable,\r\n\t\t\t\t\t\t/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'number': number,\r\n\t\t\t\t\t'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\r\n\t\t\t\t\t'punctuation': /[()',]/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// Other commands\r\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'keyword': /^\\w+\\b/i,\r\n\t\t\t\t\t'string': string,\r\n\t\t\t\t\t'parameter': parameter,\r\n\t\t\t\t\t'label': {\r\n\t\t\t\t\t\tpattern: /(^\\s*):\\S+/m,\r\n\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\talias: 'property'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'variable': variable,\r\n\t\t\t\t\t'number': number,\r\n\t\t\t\t\t'operator': /\\^/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t'operator': /[&@]/,\r\n\t\t'punctuation': /[()']/\r\n\t};\r\n}(Prism));\r\nPrism.languages.bison = Prism.languages.extend('c', {});\r\n\r\nPrism.languages.insertBefore('bison', 'comment', {\r\n\t'bison': {\r\n\t\t// This should match all the beginning of the file\r\n\t\t// including the prologue(s), the bison declarations and\r\n\t\t// the grammar rules.\r\n\t\tpattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\r\n\t\tinside: {\r\n\t\t\t'c': {\r\n\t\t\t\t// Allow for one level of nested braces\r\n\t\t\t\tpattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'delimiter': {\r\n\t\t\t\t\t\tpattern: /^%?\\{|%?\\}$/,\r\n\t\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'bison-variable': {\r\n\t\t\t\t\t\tpattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\r\n\t\t\t\t\t\talias: 'variable',\r\n\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\t'punctuation': /<|>/\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\trest: Prism.languages.c\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'comment': Prism.languages.c.comment,\r\n\t\t\t'string': Prism.languages.c.string,\r\n\t\t\t'property': /\\S+(?=:)/,\r\n\t\t\t'keyword': /%\\w+/,\r\n\t\t\t'number': {\r\n\t\t\t\tpattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'punctuation': /%[%?]|[|:;\\[\\]<>]/\r\n\t\t}\r\n\t}\r\n});\r\nPrism.languages.brainfuck = {\r\n\t'pointer': {\r\n\t\tpattern: /<|>/,\r\n\t\talias: 'keyword'\r\n\t},\r\n\t'increment': {\r\n\t\tpattern: /\\+/,\r\n\t\talias: 'inserted'\r\n\t},\r\n\t'decrement': {\r\n\t\tpattern: /-/,\r\n\t\talias: 'deleted'\r\n\t},\r\n\t'branching': {\r\n\t\tpattern: /\\[|\\]/,\r\n\t\talias: 'important'\r\n\t},\r\n\t'operator': /[.,]/,\r\n\t'comment': /\\S+/\r\n};\r\nPrism.languages.bro = {\r\n\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\$])#.*/,\r\n\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'italic':  /\\b(?:TODO|FIXME|XXX)\\b/\r\n\t\t}\r\n\t},\r\n\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\r\n\t'boolean': /\\b[TF]\\b/,\r\n\r\n\t'function': {\r\n\t\tpattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\r\n\t\tinside: {\r\n\t\t\tkeyword: /^(?:function|hook|event)/\r\n\t\t}\r\n\t},\r\n\r\n\t'variable':\t{\r\n\t\tpattern: /(?:global|local) \\w+/i,\r\n\t\tinside: {\r\n\t\t\tkeyword: /(?:global|local)/\r\n\t\t}\r\n\t},\r\n\r\n\t'builtin': /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\r\n\r\n\t'constant': {\r\n\t\tpattern: /const \\w+/i,\r\n\t\tinside: {\r\n\t\t\tkeyword: /const/\r\n\t\t}\r\n\t},\r\n\r\n\t'keyword': /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\r\n\r\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\r\n\r\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\r\n\r\n\t'punctuation': /[{}[\\];(),.:]/\r\n};\r\n\r\nPrism.languages.cpp = Prism.languages.extend('c', {\r\n\t'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\t'operator': /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\r\n});\r\n\r\nPrism.languages.insertBefore('cpp', 'keyword', {\r\n\t'class-name': {\r\n\t\tpattern: /(class\\s+)\\w+/i,\r\n\t\tlookbehind: true\r\n\t}\r\n});\r\nPrism.languages.csharp = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do|double|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|goto|if|implicit|in|int|interface|internal|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while|add|alias|ascending|async|await|descending|dynamic|from|get|global|group|into|join|let|orderby|partial|remove|select|set|value|var|where|yield)\\b/,\r\n\t'string': [\r\n\t\t{\r\n\t\t\tpattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+f?)\\b/i\r\n});\r\n\r\nPrism.languages.insertBefore('csharp', 'keyword', {\r\n\t'generic-method': {\r\n\t\tpattern: /[a-z0-9_]+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/i,\r\n\t\talias: 'function',\r\n\t\tinside: {\r\n\t\t\tkeyword: Prism.languages.csharp.keyword,\r\n\t\t\tpunctuation: /[<>(),.:]/\r\n\t\t}\r\n\t},\r\n\t'preprocessor': {\r\n\t\tpattern: /(^\\s*)#.*/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'property',\r\n\t\tinside: {\r\n\t\t\t// highlight preprocessor directives as keywords\r\n\t\t\t'directive': {\r\n\t\t\t\tpattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'keyword'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nPrism.languages.arduino = Prism.languages.extend('cpp', {\r\n\t'keyword': /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\r\n\t'builtin': /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\r\n\t'constant': /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\r\n});\r\n\r\n(function(Prism) {\r\n\r\n// Ignore comments starting with { to privilege string interpolation highlighting\r\nvar comment = /#(?!\\{).+/,\r\n    interpolation = {\r\n    \tpattern: /#\\{[^}]+\\}/,\r\n    \talias: 'variable'\r\n    };\r\n\r\nPrism.languages.coffeescript = Prism.languages.extend('javascript', {\r\n\t'comment': comment,\r\n\t'string': [\r\n\r\n\t\t// Strings are multiline\r\n\t\t{\r\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\t// Strings are multiline\r\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\r\n\t'class-member': {\r\n\t\tpattern: /@(?!\\d)\\w+/,\r\n\t\talias: 'variable'\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('coffeescript', 'comment', {\r\n\t'multiline-comment': {\r\n\t\tpattern: /###[\\s\\S]+?###/,\r\n\t\talias: 'comment'\r\n\t},\r\n\r\n\t// Block regexp can contain comments and interpolation\r\n\t'block-regex': {\r\n\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\r\n\t\talias: 'regex',\r\n\t\tinside: {\r\n\t\t\t'comment': comment,\r\n\t\t\t'interpolation': interpolation\r\n\t\t}\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('coffeescript', 'string', {\r\n\t'inline-javascript': {\r\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\r\n\t\tinside: {\r\n\t\t\t'delimiter': {\r\n\t\t\t\tpattern: /^`|`$/,\r\n\t\t\t\talias: 'punctuation'\r\n\t\t\t},\r\n\t\t\trest: Prism.languages.javascript\r\n\t\t}\r\n\t},\r\n\r\n\t// Block strings\r\n\t'multiline-string': [\r\n\t\t{\r\n\t\t\tpattern: /'''[\\s\\S]*?'''/,\r\n\t\t\tgreedy: true,\r\n\t\t\talias: 'string'\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n\t\t\tgreedy: true,\r\n\t\t\talias: 'string',\r\n\t\t\tinside: {\r\n\t\t\t\tinterpolation: interpolation\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\r\n});\r\n\r\nPrism.languages.insertBefore('coffeescript', 'keyword', {\r\n\t// Object property\r\n\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\r\n});\r\n\r\ndelete Prism.languages.coffeescript['template-string'];\r\n\r\n}(Prism));\r\n/**\r\n * Original by Samuel Flores\r\n *\r\n * Adds the following new token classes:\r\n * \t\tconstant, builtin, variable, symbol, regex\r\n */\r\n(function(Prism) {\r\n\tPrism.languages.ruby = Prism.languages.extend('clike', {\r\n\t\t'comment': [\r\n\t\t\t/#(?!\\{[^\\r\\n]*?\\}).*/,\r\n\t\t\t/^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m\r\n\t\t],\r\n\t\t'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\r\n\t});\r\n\r\n\tvar interpolation = {\r\n\t\tpattern: /#\\{[^}]+\\}/,\r\n\t\tinside: {\r\n\t\t\t'delimiter': {\r\n\t\t\t\tpattern: /^#\\{|\\}$/,\r\n\t\t\t\talias: 'tag'\r\n\t\t\t},\r\n\t\t\trest: Prism.util.clone(Prism.languages.ruby)\r\n\t\t}\r\n\t};\r\n\r\n\tPrism.languages.insertBefore('ruby', 'keyword', {\r\n\t\t'regex': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// Here we need to specifically allow interpolation\r\n\t\t\t\tpattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tgreedy: true\r\n\t\t\t}\r\n\t\t],\r\n\t\t'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\r\n\t\t'symbol': /:[a-zA-Z_]\\w*(?:[?!]|\\b)/\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('ruby', 'number', {\r\n\t\t'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\r\n\t\t'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\r\n\t});\r\n\r\n\tPrism.languages.ruby.string = [\r\n\t\t{\r\n\t\t\tpattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t// Here we need to specifically allow interpolation\r\n\t\t\tpattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n}(Prism));\r\nPrism.languages.css.selector = {\r\n\tpattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\r\n\tinside: {\r\n\t\t'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\r\n\t\t'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\r\n\t\t'class': /\\.[-:.\\w]+/,\r\n\t\t'id': /#[-:.\\w]+/,\r\n\t\t'attribute': /\\[[^\\]]+\\]/\r\n\t}\r\n};\r\n\r\nPrism.languages.insertBefore('css', 'function', {\r\n\t'hexcode': /#[\\da-f]{3,8}/i,\r\n\t'entity': /\\\\[\\da-f]{1,8}/i,\r\n\t'number': /[\\d%.]+/\r\n});\r\nPrism.languages.d = Prism.languages.extend('clike', {\r\n\t'string': [\r\n\t\t// r\"\", x\"\"\r\n\t\t/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,\r\n\t\t// q\"[]\", q\"()\", q\"<>\", q\"{}\"\r\n\t\t/\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,\r\n\t\t// q\"IDENT\r\n\t\t// ...\r\n\t\t// IDENT\"\r\n\t\t/\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,\r\n\t\t// q\"//\", q\"||\", etc.\r\n\t\t/\\bq\"(.)[\\s\\S]*?\\1\"/,\r\n\t\t// Characters\r\n\t\t/'(?:\\\\'|\\\\?[^']+)'/,\r\n\r\n\t\t/([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/\r\n\t],\r\n\r\n\t'number': [\r\n\t\t// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\r\n\t\t// Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\r\n\t\t/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i,\r\n\t\t{\r\n\t\t\tpattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\r\n\t// In order: $, keywords and special tokens, globally defined symbols\r\n\t'keyword': /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\r\n\t'operator': /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\r\n});\r\n\r\n\r\nPrism.languages.d.comment = [\r\n\t// Shebang\r\n\t/^\\s*#!.+/,\r\n\t// /+ +/\r\n\t{\r\n\t\t// Allow one level of nesting\r\n\t\tpattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\r\n\t\tlookbehind: true\r\n\t}\r\n].concat(Prism.languages.d.comment);\r\n\r\nPrism.languages.insertBefore('d', 'comment', {\r\n\t'token-string': {\r\n\t\t// Allow one level of nesting\r\n\t\tpattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\r\n\t\talias: 'string'\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('d', 'keyword', {\r\n\t'property': /\\B@\\w*/\r\n});\r\n\r\nPrism.languages.insertBefore('d', 'function', {\r\n\t'register': {\r\n\t\t// Iasm registers\r\n\t\tpattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\r\n\t\talias: 'variable'\r\n\t}\r\n});\r\nPrism.languages.dart = Prism.languages.extend('clike', {\r\n\t'string': [\r\n\t\t{\r\n\t\t\tpattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'keyword': [\r\n\t\t/\\b(?:async|sync|yield)\\*/,\r\n\t\t/\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/\r\n\t],\r\n\t'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\r\n});\r\n\r\nPrism.languages.insertBefore('dart','function',{\r\n\t'metadata': {\r\n\t\tpattern: /@\\w+/,\r\n\t\talias: 'symbol'\r\n\t}\r\n});\r\n// Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\r\n// Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\r\n\r\nvar _django_template = {\r\n\t'property': {\r\n\t\tpattern: /(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'string': {\r\n\t\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\t\tgreedy: true\r\n\t\t\t},\r\n\t\t\t'keyword': /\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,\r\n\t\t\t'operator' : /[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\r\n\t\t\t'function': /\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,\r\n\t\t\t'important': /\\b-?\\d+(?:\\.\\d+)?\\b/,\r\n\t\t\t'variable': /\\b\\w+?\\b/,\r\n\t\t\t'punctuation' : /[[\\];(),.:]/\r\n\t\t}\r\n\t}\r\n};\r\n\r\nPrism.languages.django = Prism.languages.extend('markup', {'comment': /(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/});\r\n// Updated html tag pattern to allow template tags inside html tags\r\nPrism.languages.django.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i;\r\nPrism.languages.insertBefore('django', 'entity', _django_template);\r\nPrism.languages.insertBefore('inside', 'tag', _django_template, Prism.languages.django.tag);\r\n\r\nif (Prism.languages.javascript) {\r\n\t// Combine js code and template tags painting inside <script> blocks\r\n\tPrism.languages.insertBefore('inside', 'string', _django_template, Prism.languages.django.script);\r\n\tPrism.languages.django.script.inside.string.inside = _django_template;\r\n}\r\nif (Prism.languages.css) {\r\n\t// Combine css code and template tags painting inside <style> blocks\r\n\tPrism.languages.insertBefore('inside', 'atrule', {'tag': _django_template.property}, Prism.languages.django.style);\r\n\tPrism.languages.django.style.inside.string.inside = _django_template;\r\n}\r\n\r\n// Add an Jinja2 alias\r\nPrism.languages.jinja2 = Prism.languages.django;\r\n\r\nPrism.languages.diff = {\r\n\t'coord': [\r\n\t\t// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\r\n\t\t/^(?:\\*{3}|-{3}|\\+{3}).*$/m,\r\n\t\t// Match \"@@ ... @@\" coord lines in unified diff.\r\n\t\t/^@@.*@@$/m,\r\n\t\t// Match coord lines in normal diff (starts with a number).\r\n\t\t/^\\d+.*$/m\r\n\t],\r\n\r\n\t// Match inserted and deleted lines. Support both +/- and >/< styles.\r\n\t'deleted': /^[-<].*$/m,\r\n\t'inserted': /^[+>].*$/m,\r\n\r\n\t// Match \"different\" lines (prefixed with \"!\") in context diff.\r\n\t'diff': {\r\n\t\t'pattern': /^!(?!!).+$/m,\r\n\t\t'alias': 'important'\r\n\t}\r\n};\r\n\r\nPrism.languages.docker = {\r\n\t'keyword': {\r\n\t\tpattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/mi,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string': /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\r\n\t'comment': /#.*/,\r\n\t'punctuation': /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\r\n};\r\n\r\nPrism.languages.dockerfile = Prism.languages.docker;\r\n\r\nPrism.languages.eiffel = {\r\n\t'comment': /--.*/,\r\n\t'string': [\r\n\t\t// Aligned-verbatim-strings\r\n\t\t{\r\n\t\t\tpattern: /\"([^[]*)\\[[\\s\\S]+?\\]\\1\"/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t// Non-aligned-verbatim-strings\r\n\t\t{\r\n\t\t\tpattern: /\"([^{]*)\\{[\\s\\S]+?\\}\\1\"/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t// Single-line string\r\n\t\t{\r\n\t\t\tpattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t// normal char | special char | char code\r\n\t'char': /'(?:%.|[^%'\\r\\n])+'/,\r\n\t'keyword': /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\r\n\t'boolean': /\\b(?:True|False)\\b/i,\r\n\t// Convention: class-names are always all upper-case characters\r\n\t'class-name': {\r\n\t\t'pattern': /\\b[A-Z][\\dA-Z_]*\\b/,\r\n\t\t'alias': 'builtin'\r\n\t},\r\n\t'number': [\r\n\t\t// hexa | octal | bin\r\n\t\t/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\r\n\t\t// Decimal\r\n\t\t/(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/\r\n\t],\r\n\t'punctuation': /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\r\n\t'operator': /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\r\n};\r\n\r\nPrism.languages.elixir = {\r\n\t// Negative look-ahead is needed for string interpolation\r\n\t// Negative look-behind is needed to avoid highlighting markdown headers in\r\n\t// multi-line doc strings\r\n\t'comment': {\r\n\t\tpattern: /(^|[^#])#(?![{#]).*/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t// ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\r\n\t'regex': /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\r\n\t'string': [\r\n\t\t{\r\n\t\t\t// ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\r\n\t\t\tpattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t// See interpolation below\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t// See interpolation below\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t// Multi-line strings are allowed\r\n\t\t\tpattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t// See interpolation below\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'atom': {\r\n\t\t// Look-behind prevents bad highlighting of the :: operator\r\n\t\tpattern: /(^|[^:]):\\w+/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'symbol'\r\n\t},\r\n\t// Look-ahead prevents bad highlighting of the :: operator\r\n\t'attr-name': /\\w+:(?!:)/,\r\n\t'capture': {\r\n\t\t// Look-behind prevents bad highlighting of the && operator\r\n\t\tpattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'function'\r\n\t},\r\n\t'argument': {\r\n\t\t// Look-behind prevents bad highlighting of the && operator\r\n\t\tpattern: /(^|[^&])&\\d+/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'attribute': {\r\n\t\tpattern: /@[\\S]+/,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\r\n\t'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\r\n\t'boolean': /\\b(?:true|false|nil)\\b/,\r\n\t'operator': [\r\n\t\t/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\r\n\t\t{\r\n\t\t\t// We don't want to match <<\r\n\t\t\tpattern: /([^<])<(?!<)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t// We don't want to match >>\r\n\t\t\tpattern: /([^>])>(?!>)/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'punctuation': /<<|>>|[.,%\\[\\]{}()]/\r\n};\r\n\r\nPrism.languages.elixir.string.forEach(function(o) {\r\n\to.inside = {\r\n\t\t'interpolation': {\r\n\t\t\tpattern: /#\\{[^}]+\\}/,\r\n\t\t\tinside: {\r\n\t\t\t\t'delimiter': {\r\n\t\t\t\t\tpattern: /^#\\{|\\}$/,\r\n\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t},\r\n\t\t\t\trest: Prism.util.clone(Prism.languages.elixir)\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});\r\n\r\n\r\nPrism.languages.erlang = {\r\n\t'comment': /%.+/,\r\n\t'string': {\r\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'quoted-function': {\r\n\t\tpattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\r\n\t\talias: 'function'\r\n\t},\r\n\t'quoted-atom': {\r\n\t\tpattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\r\n\t\talias: 'atom'\r\n\t},\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\t'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\r\n\t'number': [\r\n\t\t/\\$\\\\?./,\r\n\t\t/\\d+#[a-z0-9]+/i,\r\n\t\t/(?:\\b|-)\\d*\\.?\\d+([Ee][+-]?\\d+)?\\b/\r\n\t],\r\n\t'function': /\\b[a-z][\\w@]*(?=\\()/,\r\n\t'variable': {\r\n\t\t// Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\r\n\t\tpattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'operator': [\r\n\t\t/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,\r\n\t\t{\r\n\t\t\t// We don't want to match <<\r\n\t\t\tpattern: /(^|[^<])<(?!<)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t// We don't want to match >>\r\n\t\t\tpattern: /(^|[^>])>(?!>)/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'atom': /\\b[a-z][\\w@]*/,\r\n\t'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\r\n\r\n};\r\nPrism.languages.fsharp = Prism.languages.extend('clike', {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\r\n\t'string': {\r\n\t\tpattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': [\r\n\t\t/\\b-?0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\r\n\t\t/\\b-?0b[01]+(?:y|uy)?\\b/,\r\n\t\t/\\b-?(?:\\d*\\.?\\d+|\\d+\\.)(?:[fFmM]|[eE][+-]?\\d+)?\\b/,\r\n\t\t/\\b-?\\d+(?:y|uy|s|us|l|u|ul|L|UL|I)?\\b/\r\n\t]\r\n});\r\nPrism.languages.insertBefore('fsharp', 'keyword', {\r\n\t'preprocessor': {\r\n\t\tpattern: /^[^\\r\\n\\S]*#.*/m,\r\n\t\talias: 'property',\r\n\t\tinside: {\r\n\t\t\t'directive': {\r\n\t\t\t\tpattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'keyword'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nPrism.languages.fortran = {\r\n\t'quoted-number': {\r\n\t\tpattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\r\n\t\talias: 'number'\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\r\n\t\tinside: {\r\n\t\t\t'comment': {\r\n\t\t\t\tpattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'comment': /!.*/,\r\n\t'boolean': /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\r\n\t'number': /(?:\\b|[+-])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\r\n\t'keyword': [\r\n\t\t// Types\r\n\t\t/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,\r\n\t\t// END statements\r\n\t\t/\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\r\n\t\t// Statements\r\n\t\t/\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\r\n\t\t// Others\r\n\t\t/\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\r\n\t],\r\n\t'operator': [\r\n\t\t/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i,\r\n\t\t{\r\n\t\t\t// Use lookbehind to prevent confusion with (/ /)\r\n\t\t\tpattern: /(^|(?!\\().)\\/(?!\\))/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'punctuation': /\\(\\/|\\/\\)|[(),;:&]/\r\n};\r\nPrism.languages.gherkin = {\r\n\t'pystring': {\r\n\t\tpattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\r\n\t\talias: 'string'\r\n\t},\r\n\t'comment': {\r\n\t\tpattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'tag': {\r\n\t\tpattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'feature': {\r\n\t\tpattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'important': {\r\n\t\t\t\tpattern: /(:)[^\\r\\n]+/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\tkeyword: /[^:\\r\\n]+:/\r\n\t\t}\r\n\t},\r\n\t'scenario': {\r\n\t\tpattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'important': {\r\n\t\t\t\tpattern: /(:)[^\\r\\n]*/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\tkeyword: /[^:\\r\\n]+:/\r\n\t\t}\r\n\t},\r\n\t'table-body': {\r\n\t\t// Look-behind is used to skip the table head, which has the same format as any table row\r\n\t\tpattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'outline': {\r\n\t\t\t\tpattern: /<[^>]+?>/,\r\n\t\t\t\talias: 'variable'\r\n\t\t\t},\r\n\t\t\t'td': {\r\n\t\t\t\tpattern: /\\s*[^\\s|][^|]*/,\r\n\t\t\t\talias: 'string'\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\|/\r\n\t\t}\r\n\t},\r\n\t'table-head': {\r\n\t\tpattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\r\n\t\tinside: {\r\n\t\t\t'th': {\r\n\t\t\t\tpattern: /\\s*[^\\s|][^|]*/,\r\n\t\t\t\talias: 'variable'\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\|/\r\n\t\t}\r\n\t},\r\n\t'atrule': {\r\n\t\tpattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\r\n\t\tinside: {\r\n\t\t\t'outline': {\r\n\t\t\t\tpattern: /<[^>]+?>/,\r\n\t\t\t\talias: 'variable'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'outline': {\r\n\t\tpattern: /<[^>]+?>/,\r\n\t\talias: 'variable'\r\n\t}\r\n};\r\n\r\nPrism.languages.git = {\r\n\t/*\r\n\t * A simple one line comment like in a git status command\r\n\t * For instance:\r\n\t * $ git status\r\n\t * # On branch infinite-scroll\r\n\t * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\r\n\t * # and have 1 and 2 different commits each, respectively.\r\n\t * nothing to commit (working directory clean)\r\n\t */\r\n\t'comment': /^#.*/m,\r\n\r\n\t/*\r\n\t * Regexp to match the changed lines in a git diff output. Check the example below.\r\n\t */\r\n\t'deleted': /^[-–].*/m,\r\n\t'inserted': /^\\+.*/m,\r\n\r\n\t/*\r\n\t * a string (double and simple quote)\r\n\t */\r\n\t'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\r\n\r\n\t/*\r\n\t * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\r\n\t * For instance:\r\n\t * $ git add file.txt\r\n\t */\r\n\t'command': {\r\n\t\tpattern: /^.*\\$ git .*$/m,\r\n\t\tinside: {\r\n\t\t\t/*\r\n\t\t\t * A git command can contain a parameter starting by a single or a double dash followed by a string\r\n\t\t\t * For instance:\r\n\t\t\t * $ git diff --cached\r\n\t\t\t * $ git log -p\r\n\t\t\t */\r\n\t\t\t'parameter': /\\s--?\\w+/m\r\n\t\t}\r\n\t},\r\n\r\n\t/*\r\n\t * Coordinates displayed in a git diff command\r\n\t * For instance:\r\n\t * $ git diff\r\n\t * diff --git file.txt file.txt\r\n\t * index 6214953..1d54a52 100644\r\n\t * --- file.txt\r\n\t * +++ file.txt\r\n\t * @@ -1 +1,2 @@\r\n\t * -Here's my tetx file\r\n\t * +Here's my text file\r\n\t * +And this is the second line\r\n\t */\r\n\t'coord': /^@@.*@@$/m,\r\n\r\n\t/*\r\n\t * Match a \"commit [SHA1]\" line in a git log output.\r\n\t * For instance:\r\n\t * $ git log\r\n\t * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\r\n\t * Author: lgiraudel\r\n\t * Date:   Mon Feb 17 11:18:34 2014 +0100\r\n\t *\r\n\t *     Add of a new line\r\n\t */\r\n\t'commit_sha1': /^commit \\w{40}$/m\r\n};\r\n\r\nPrism.languages.glsl = Prism.languages.extend('clike', {\r\n\t'comment': [\r\n\t\t/\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t/\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/\r\n\t],\r\n\t'number': /\\b(?:0x[\\da-f]+|(?:\\.\\d+|\\d+\\.?\\d*)(?:e[+-]?\\d+)?)[ulf]*\\b/i,\r\n\t'keyword': /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\r\n});\r\n\r\nPrism.languages.insertBefore('glsl', 'comment', {\r\n\t'preprocessor': {\r\n\t\tpattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'builtin'\r\n\t}\r\n});\r\nPrism.languages.go = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\r\n\t'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\r\n\t'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\r\n\t'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\r\n\t'number': /\\b(-?(0x[a-f\\d]+|(\\d+\\.?\\d*|\\.\\d+)(e[-+]?\\d+)?)i?)\\b/i,\r\n\t'string': {\r\n\t\tpattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n\t\tgreedy: true\r\n\t}\r\n});\r\ndelete Prism.languages.go['class-name'];\r\n\r\nPrism.languages.graphql = {\r\n\t'comment': /#.*/,\r\n\t'string': {\r\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b/,\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\t'variable': /\\$[a-z_]\\w*/i,\r\n\t'directive': {\r\n\t\tpattern: /@[a-z_]\\w*/i,\r\n\t\talias: 'function'\r\n\t},\r\n\t'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\r\n\t'keyword': [\r\n\t\t{\r\n\t\t\tpattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t/\\b(?:query|fragment|mutation)\\b/\r\n\t],\r\n\t'operator': /!|=|\\.{3}/,\r\n\t'punctuation': /[!(){}\\[\\]:=,]/\r\n};\r\nPrism.languages.groovy = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\r\n\t'string': [\r\n\t\t{\r\n\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'number': /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\r\n\t'operator': {\r\n\t\tpattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'punctuation': /\\.+|[{}[\\];(),:$]/\r\n});\r\n\r\nPrism.languages.insertBefore('groovy', 'string', {\r\n\t'shebang': {\r\n\t\tpattern: /#!.+/,\r\n\t\talias: 'comment'\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('groovy', 'punctuation', {\r\n\t'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\r\n});\r\n\r\nPrism.languages.insertBefore('groovy', 'function', {\r\n\t'annotation': {\r\n\t\talias: 'punctuation',\r\n\t\tpattern: /(^|[^.])@\\w+/,\r\n\t\tlookbehind: true\r\n\t}\r\n});\r\n\r\n// Handle string interpolation\r\nPrism.hooks.add('wrap', function(env) {\r\n\tif (env.language === 'groovy' && env.type === 'string') {\r\n\t\tvar delimiter = env.content[0];\r\n\r\n\t\tif (delimiter != \"'\") {\r\n\t\t\tvar pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\r\n\t\t\tif (delimiter === '$') {\r\n\t\t\t\tpattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\r\n\t\t\t}\r\n\r\n\t\t\t// To prevent double HTML-encoding we have to decode env.content first\r\n\t\t\tenv.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\r\n\r\n\t\t\tenv.content = Prism.highlight(env.content, {\r\n\t\t\t\t'expression': {\r\n\t\t\t\t\tpattern: pattern,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\tinside: Prism.languages.groovy\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tenv.classes.push(delimiter === '/' ? 'regex' : 'gstring');\r\n\t\t}\r\n\t}\r\n});\r\n\r\n/* TODO\r\n\tHandle multiline code after tag\r\n\t    %foo= some |\r\n\t\t\tmultiline |\r\n\t\t\tcode |\r\n*/\r\n\r\n(function(Prism) {\r\n\r\n\tPrism.languages.haml = {\r\n\t\t// Multiline stuff should appear before the rest\r\n\r\n\t\t'multiline-comment': {\r\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'comment'\r\n\t\t},\r\n\r\n\t\t'multiline-code': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\trest: Prism.languages.ruby\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\trest: Prism.languages.ruby\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\r\n\t\t// See at the end of the file for known filters\r\n\t\t'filter': {\r\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'filter-name': {\r\n\t\t\t\t\tpattern: /^:[\\w-]+/,\r\n\t\t\t\t\talias: 'variable'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'markup': {\r\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\trest: Prism.languages.markup\r\n\t\t\t}\r\n\t\t},\r\n\t\t'doctype': {\r\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'tag': {\r\n\t\t\t// Allows for one nested group of braces\r\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'attributes': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Lookbehind tries to prevent interpolations from breaking it all\r\n\t\t\t\t\t\t// Allows for one nested group of braces\r\n\t\t\t\t\t\tpattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\r\n\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\trest: Prism.languages.ruby\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\r\n\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\t'attr-value': {\r\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\r\n\t\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\r\n\t\t\t\t\t\t\t'punctuation': /[=(),]/\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /\\[[^\\]]+\\]/,\r\n\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\trest: Prism.languages.ruby\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t'punctuation': /[<>]/\r\n\t\t\t}\r\n\t\t},\r\n\t\t'code': {\r\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\trest: Prism.languages.ruby\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Interpolations in plain text\r\n\t\t'interpolation': {\r\n\t\t\tpattern: /#\\{[^}]+\\}/,\r\n\t\t\tinside: {\r\n\t\t\t\t'delimiter': {\r\n\t\t\t\t\tpattern: /^#\\{|\\}$/,\r\n\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t},\r\n\t\t\t\trest: Prism.languages.ruby\r\n\t\t\t}\r\n\t\t},\r\n\t\t'punctuation': {\r\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t};\r\n\r\n\tvar filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\r\n\r\n\t// Non exhaustive list of available filters and associated languages\r\n\tvar filters = [\r\n\t\t'css',\r\n\t\t{filter:'coffee',language:'coffeescript'},\r\n\t\t'erb',\r\n\t\t'javascript',\r\n\t\t'less',\r\n\t\t'markdown',\r\n\t\t'ruby',\r\n\t\t'scss',\r\n\t\t'textile'\r\n\t];\r\n\tvar all_filters = {};\r\n\tfor (var i = 0, l = filters.length; i < l; i++) {\r\n\t\tvar filter = filters[i];\r\n\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;\r\n\t\tif (Prism.languages[filter.language]) {\r\n\t\t\tall_filters['filter-' + filter.filter] = {\r\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'filter-name': {\r\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\r\n\t\t\t\t\t\talias: 'variable'\r\n\t\t\t\t\t},\r\n\t\t\t\t\trest: Prism.languages[filter.language]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tPrism.languages.insertBefore('haml', 'filter', all_filters);\r\n\r\n}(Prism));\r\n(function(Prism) {\r\n\r\n\tvar handlebars_pattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/;\r\n\r\n\tPrism.languages.handlebars = Prism.languages.extend('markup', {\r\n\t\t'handlebars': {\r\n\t\t\tpattern: handlebars_pattern,\r\n\t\t\tinside: {\r\n\t\t\t\t'delimiter': {\r\n\t\t\t\t\tpattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\r\n\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t},\r\n\t\t\t\t'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\t\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?)\\b/,\r\n\t\t\t\t'boolean': /\\b(?:true|false)\\b/,\r\n\t\t\t\t'block': {\r\n\t\t\t\t\tpattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'keyword'\r\n\t\t\t\t},\r\n\t\t\t\t'brackets': {\r\n\t\t\t\t\tpattern: /\\[[^\\]]+\\]/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\tpunctuation: /\\[|\\]/,\r\n\t\t\t\t\t\tvariable: /[\\s\\S]+/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\r\n\t\t\t\t'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Comments are inserted at top so that they can\r\n\t// surround markup\r\n\tPrism.languages.insertBefore('handlebars', 'tag', {\r\n\t\t'handlebars-comment': {\r\n\t\t\tpattern: /\\{\\{![\\s\\S]*?\\}\\}/,\r\n\t\t\talias: ['handlebars','comment']\r\n\t\t}\r\n\t});\r\n\r\n\t// Tokenize all inline Handlebars expressions that are wrapped in {{ }} or {{{ }}}\r\n\t// This allows for easy Handlebars + markup highlighting\r\n\tPrism.hooks.add('before-highlight', function(env) {\r\n\t\tif (env.language !== 'handlebars') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tenv.tokenStack = [];\r\n\r\n\t\tenv.backupCode = env.code;\r\n\t\tenv.code = env.code.replace(handlebars_pattern, function(match) {\r\n\t\t\tvar i = env.tokenStack.length;\r\n\t\t\t// Check for existing strings\r\n\t\t\twhile (env.backupCode.indexOf('___HANDLEBARS' + i + '___') !== -1)\r\n\t\t\t\t++i;\r\n\r\n\t\t\t// Create a sparse array\r\n\t\t\tenv.tokenStack[i] = match;\r\n\r\n\t\t\treturn '___HANDLEBARS' + i + '___';\r\n\t\t});\r\n\t});\r\n\r\n\t// Restore env.code for other plugins (e.g. line-numbers)\r\n\tPrism.hooks.add('before-insert', function(env) {\r\n\t\tif (env.language === 'handlebars') {\r\n\t\t\tenv.code = env.backupCode;\r\n\t\t\tdelete env.backupCode;\r\n\t\t}\r\n\t});\r\n\r\n\t// Re-insert the tokens after highlighting\r\n\t// and highlight them with defined grammar\r\n\tPrism.hooks.add('after-highlight', function(env) {\r\n\t\tif (env.language !== 'handlebars') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, keys = Object.keys(env.tokenStack); i < keys.length; ++i) {\r\n\t\t\tvar k = keys[i];\r\n\t\t\tvar t = env.tokenStack[k];\r\n\r\n\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns\r\n\t\t\tenv.highlightedCode = env.highlightedCode.replace('___HANDLEBARS' + k + '___', Prism.highlight(t, env.grammar, 'handlebars').replace(/\\$/g, '$$$$'));\r\n\t\t}\r\n\r\n\t\tenv.element.innerHTML = env.highlightedCode;\r\n\t});\r\n\r\n}(Prism));\r\n\r\nPrism.languages.haskell= {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'char': /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\r\n\t'string': {\r\n\t\tpattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'keyword' : /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\r\n\t'import_statement' : {\r\n\t\t// The imported or hidden names are not included in this import\r\n\t\t// statement. This is because we want to highlight those exactly like\r\n\t\t// we do for the names in the program.\r\n\t\tpattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'keyword': /\\b(?:import|qualified|as|hiding)\\b/\r\n\t\t}\r\n\t},\r\n\t// These are builtin variables only. Constructors are highlighted later as a constant.\r\n\t'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\r\n\t// decimal integers and floating point numbers | octal integers | hexadecimal integers\r\n\t'number' : /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\r\n\t// Most of this is needed because of the meaning of a single '.'.\r\n\t// If it stands alone freely, it is the function composition.\r\n\t// It may also be a separator between a module name and an identifier => no\r\n\t// operator. If it comes together with other special characters it is an\r\n\t// operator too.\r\n\t'operator' : /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\r\n\t// In Haskell, nearly everything is a variable, do not highlight these.\r\n\t'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\r\n\t'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\r\n\t'punctuation' : /[{}[\\];(),.:]/\r\n};\r\n\r\nPrism.languages.haxe = Prism.languages.extend('clike', {\r\n\t// Strings can be multi-line\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': {\r\n\t\t\t\t\t\tpattern: /^\\$\\w*/,\r\n\t\t\t\t\t\talias: 'variable'\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// See rest below\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t// The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\r\n\t'keyword': /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\r\n\t'operator': /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\r\n});\r\nPrism.languages.insertBefore('haxe', 'class-name', {\r\n\t'regex': {\r\n\t\tpattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\r\n\t\tgreedy: true\r\n\t}\r\n});\r\nPrism.languages.insertBefore('haxe', 'keyword', {\r\n\t'preprocessor': {\r\n\t\tpattern: /#\\w+/,\r\n\t\talias: 'builtin'\r\n\t},\r\n\t'metadata': {\r\n\t\tpattern: /@:?\\w+/,\r\n\t\talias: 'symbol'\r\n\t},\r\n\t'reification': {\r\n\t\tpattern: /\\$(?:\\w+|(?=\\{))/,\r\n\t\talias: 'variable'\r\n\t}\r\n});\r\nPrism.languages.haxe['string'].inside['interpolation'].inside.rest = Prism.util.clone(Prism.languages.haxe);\r\ndelete Prism.languages.haxe['class-name'];\r\nPrism.languages.http = {\r\n\t'request-line': {\r\n\t\tpattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,\r\n\t\tinside: {\r\n\t\t\t// HTTP Verb\r\n\t\t\tproperty: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\r\n\t\t\t// Path or query argument\r\n\t\t\t'attr-name': /:\\w+/\r\n\t\t}\r\n\t},\r\n\t'response-status': {\r\n\t\tpattern: /^HTTP\\/1.[01] \\d+.*/m,\r\n\t\tinside: {\r\n\t\t\t// Status, e.g. 200 OK\r\n\t\t\tproperty: {\r\n                pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\r\n                lookbehind: true\r\n            }\r\n\t\t}\r\n\t},\r\n\t// HTTP header name\r\n\t'header-name': {\r\n        pattern: /^[\\w-]+:(?=.)/m,\r\n        alias: 'keyword'\r\n    }\r\n};\r\n\r\n// Create a mapping of Content-Type headers to language definitions\r\nvar httpLanguages = {\r\n\t'application/json': Prism.languages.javascript,\r\n\t'application/xml': Prism.languages.markup,\r\n\t'text/xml': Prism.languages.markup,\r\n\t'text/html': Prism.languages.markup\r\n};\r\n\r\n// Insert each content type parser that has its associated language\r\n// currently loaded.\r\nfor (var contentType in httpLanguages) {\r\n\tif (httpLanguages[contentType]) {\r\n\t\tvar options = {};\r\n\t\toptions[contentType] = {\r\n\t\t\tpattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\trest: httpLanguages[contentType]\r\n\t\t\t}\r\n\t\t};\r\n\t\tPrism.languages.insertBefore('http', 'header-name', options);\r\n\t}\r\n}\r\n;\r\nPrism.languages.icon = {\r\n\t'comment': /#.*/,\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\r\n\t'builtin-keyword': {\r\n\t\tpattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'directive': {\r\n\t\tpattern: /\\$\\w+/,\r\n\t\talias: 'builtin'\r\n\t},\r\n\t'keyword': /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\r\n\t'function': /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\r\n\t'operator': /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\r\n\t'punctuation': /[\\[\\](){},;]/\r\n};\r\nPrism.languages.inform7 = {\r\n\t'string': {\r\n\t\tpattern: /\"[^\"]*\"/,\r\n\t\tinside: {\r\n\t\t\t'substitution': {\r\n\t\t\t\tpattern: /\\[[^\\]]+\\]/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'delimiter': {\r\n\t\t\t\t\t\tpattern:/\\[|\\]/,\r\n\t\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// See rest below\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'comment': {\r\n\t\tpattern: /\\[[^\\]]+\\]/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'title': {\r\n\t\tpattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\r\n\t\talias: 'important'\r\n\t},\r\n\t'number': {\r\n\t\tpattern: /(^|[^-])(?:(?:\\b|-)\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'verb': {\r\n\t\tpattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\r\n\t\tlookbehind: true,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'keyword': {\r\n\t\tpattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'property': {\r\n\t\tpattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\r\n\t\tlookbehind: true,\r\n\t\talias: 'symbol'\r\n\t},\r\n\t'position': {\r\n\t\tpattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\r\n\t\tlookbehind: true,\r\n\t\talias: 'keyword'\r\n\t},\r\n\t'type': {\r\n\t\tpattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\r\n\t\tlookbehind: true,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'punctuation': /[.,:;(){}]/\r\n};\r\n\r\nPrism.languages.inform7['string'].inside['substitution'].inside.rest = Prism.util.clone(Prism.languages.inform7);\r\n// We don't want the remaining text in the substitution to be highlighted as the string.\r\nPrism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\r\n\tpattern: /\\S(?:\\s*\\S)*/,\r\n\talias: 'comment'\r\n};\r\nPrism.languages.ini= {\r\n\t'comment': /^[ \\t]*;.*$/m,\r\n\t'selector': /^[ \\t]*\\[.*?\\]/m,\r\n\t'constant': /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\r\n\t'attr-value': {\r\n\t\tpattern: /=.*/,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /^[=]/\r\n\t\t}\r\n\t}\r\n};\r\nPrism.languages.j = {\r\n\t'comment': /\\bNB\\..*/,\r\n\t'string': {\r\n\t\tpattern: /'(?:''|[^'\\r\\n])*'/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'keyword': /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\r\n\t'verb': {\r\n\t\t// Negative look-ahead prevents bad highlighting\r\n\t\t// of ^: ;. =. =: !. !:\r\n\t\tpattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\r\n\t\talias: 'keyword'\r\n\t},\r\n\t'number': /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\r\n\t'adverb': {\r\n\t\tpattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\r\n\t\talias: 'builtin'\r\n\t},\r\n\t'operator': /[=a][.:]|_\\./,\r\n\t'conjunction': {\r\n\t\tpattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'punctuation': /[()]/\r\n};\r\nPrism.languages.java = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\r\n\t'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp\\-]+\\b|\\b\\d*\\.?\\d+(?:e[+-]?\\d+)?[df]?\\b/i,\r\n\t'operator': {\r\n\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\r\n\t\tlookbehind: true\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('java','function', {\r\n\t'annotation': {\r\n\t\talias: 'punctuation',\r\n\t\tpattern: /(^|[^.])@\\w+/,\r\n\t\tlookbehind: true\r\n\t}\r\n});\r\n\r\nPrism.languages.jolie = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\r\n\t'builtin': /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\r\n\t'number': /\\b\\d*\\.?\\d+(?:e[+-]?\\d+)?l?\\b/i,\r\n\t'operator': /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\r\n\t'symbol': /[|;@]/,\r\n\t'punctuation': /[,.]/,\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t}\r\n});\r\n\r\ndelete Prism.languages.jolie['class-name'];\r\ndelete Prism.languages.jolie['function'];\r\n\r\nPrism.languages.insertBefore( 'jolie', 'keyword', {\r\n\t'function':\r\n\t{\r\n\t\tpattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'aggregates': {\r\n\t\tpattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'withExtension': {\r\n\t\t\t\tpattern: /\\bwith\\s+\\w+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'keyword' : /\\bwith\\b/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'function': {\r\n\t\t\t\tpattern: /\\w+/\r\n\t\t\t},\r\n\t\t\t'punctuation': {\r\n\t\t\t\tpattern: /,/\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'redirects': {\r\n\t\tpattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': {\r\n\t\t\t\tpattern: /,/\r\n\t\t\t},\r\n\t\t\t'function': {\r\n\t\t\t\tpattern: /\\w+/\r\n\t\t\t},\r\n\t\t\t'symbol': {\r\n\t\t\t\tpattern: /=>/\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\nPrism.languages.json = {\r\n\t'property': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\r\n\t'string': {\r\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?)\\b/,\r\n\t'punctuation': /[{}[\\]);,]/,\r\n\t'operator': /:/g,\r\n\t'boolean': /\\b(?:true|false)\\b/i,\r\n\t'null': /\\bnull\\b/i\r\n};\r\n\r\nPrism.languages.jsonp = Prism.languages.json;\r\n\r\nPrism.languages.julia= {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])#.*/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string': /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\r\n\t'keyword' : /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\r\n\t'boolean' : /\\b(?:true|false)\\b/,\r\n\t'number' : /\\b-?(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?\\b/i,\r\n\t'operator': /[-+*^%÷&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,\r\n\t'punctuation' : /[{}[\\];(),.:]/\r\n};\r\nPrism.languages.keyman = {\r\n\t'comment': /\\bc\\s.*/i,\r\n\t'function': /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,  // virtual key\r\n\t'string': /(\"|').*?\\1/,\r\n\t'bold': [   // header statements, system stores and variable system stores\r\n\t\t/&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i,\r\n\t\t/\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i\r\n\t],\r\n\t'keyword': /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,  // rule keywords\r\n\t'atrule': /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,   // structural keywords\r\n\t'number': /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i, // U+####, x###, d### characters and numbers\r\n\t'operator': /[+>\\\\,()]/,\r\n\t'tag': /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i   // prefixes\r\n};\r\n(function (Prism) {\r\n\tPrism.languages.kotlin = Prism.languages.extend('clike', {\r\n\t\t'keyword': {\r\n\t\t\t// The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\r\n\t\t\tpattern: /(^|[^.])\\b(?:abstract|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|else|enum|final|finally|for|fun|get|if|import|in|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|out|override|package|private|protected|public|reified|return|sealed|set|super|tailrec|this|throw|to|try|val|var|when|where|while)\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'function': [\r\n\t\t\t/\\w+(?=\\s*\\()/,\r\n\t\t\t{\r\n\t\t\t\tpattern: /(\\.)\\w+(?=\\s*\\{)/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t}\r\n\t\t],\r\n\t\t'number': /\\b(?:0[bx][\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?[fFL]?)\\b/,\r\n\t\t'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\r\n\t});\r\n\r\n\tdelete Prism.languages.kotlin[\"class-name\"];\r\n\r\n\tPrism.languages.insertBefore('kotlin', 'string', {\r\n\t\t'raw-string': {\r\n\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\r\n\t\t\talias: 'string'\r\n\t\t\t// See interpolation below\r\n\t\t}\r\n\t});\r\n\tPrism.languages.insertBefore('kotlin', 'keyword', {\r\n\t\t'annotation': {\r\n\t\t\tpattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\r\n\t\t\talias: 'builtin'\r\n\t\t}\r\n\t});\r\n\tPrism.languages.insertBefore('kotlin', 'function', {\r\n\t\t'label': {\r\n\t\t\tpattern: /\\w+@|@\\w+/,\r\n\t\t\talias: 'symbol'\r\n\t\t}\r\n\t});\r\n\r\n\tvar interpolation = [\r\n\t\t{\r\n\t\t\tpattern: /\\$\\{[^}]+\\}/,\r\n\t\t\tinside: {\r\n\t\t\t\tdelimiter: {\r\n\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\r\n\t\t\t\t\talias: 'variable'\r\n\t\t\t\t},\r\n\t\t\t\trest: Prism.util.clone(Prism.languages.kotlin)\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /\\$\\w+/,\r\n\t\t\talias: 'variable'\r\n\t\t}\r\n\t];\r\n\r\n\tPrism.languages.kotlin['string'].inside = Prism.languages.kotlin['raw-string'].inside = {\r\n\t\tinterpolation: interpolation\r\n\t};\r\n\r\n}(Prism));\r\n(function(Prism) {\r\n\tvar funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\r\n\t    insideEqu = {\r\n\t\t    'equation-command': {\r\n\t\t\t    pattern: funcPattern,\r\n\t\t\t    alias: 'regex'\r\n\t\t    }\r\n\t    };\r\n\r\n\tPrism.languages.latex = {\r\n\t\t'comment': /%.*/m,\r\n\t\t// the verbatim environment prints whitespace to the document\r\n\t\t'cdata':  {\r\n\t\t\tpattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t/*\r\n\t\t * equations can be between $ $ or \\( \\) or \\[ \\]\r\n\t\t * (all are multiline)\r\n\t\t */\r\n\t\t'equation': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\r\n\t\t\t\tinside: insideEqu,\r\n\t\t\t\talias: 'string'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: insideEqu,\r\n\t\t\t\talias: 'string'\r\n\t\t\t}\r\n\t\t],\r\n\t\t/*\r\n\t\t * arguments which are keywords or references are highlighted\r\n\t\t * as keywords\r\n\t\t */\r\n\t\t'keyword': {\r\n\t\t\tpattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'url': {\r\n\t\t\tpattern: /(\\\\url\\{)[^}]+(?=\\})/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t/*\r\n\t\t * section or chapter headlines are highlighted as bold so that\r\n\t\t * they stand out more\r\n\t\t */\r\n\t\t'headline': {\r\n\t\t\tpattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'class-name'\r\n\t\t},\r\n\t\t'function': {\r\n\t\t\tpattern: funcPattern,\r\n\t\t\talias: 'selector'\r\n\t\t},\r\n\t\t'punctuation': /[[\\]{}&]/\r\n\t};\r\n})(Prism);\r\n\r\n/* FIXME :\r\n :extend() is not handled specifically : its highlighting is buggy.\r\n Mixin usage must be inside a ruleset to be highlighted.\r\n At-rules (e.g. import) containing interpolations are buggy.\r\n Detached rulesets are highlighted as at-rules.\r\n A comment before a mixin usage prevents the latter to be properly highlighted.\r\n */\r\n\r\nPrism.languages.less = Prism.languages.extend('css', {\r\n\t'comment': [\r\n\t\t/\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\/.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'atrule': {\r\n\t\tpattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /[:()]/\r\n\t\t}\r\n\t},\r\n\t// selectors and mixins are considered the same\r\n\t'selector': {\r\n\t\tpattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\r\n\t\tinside: {\r\n\t\t\t// mixin parameters\r\n\t\t\t'variable': /@+[\\w-]+/\r\n\t\t}\r\n\t},\r\n\r\n\t'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\r\n\t'punctuation': /[{}();:,]/,\r\n\t'operator': /[+\\-*\\/]/\r\n});\r\n\r\n// Invert function and punctuation positions\r\nPrism.languages.insertBefore('less', 'punctuation', {\r\n\t'function': Prism.languages.less.function\r\n});\r\n\r\nPrism.languages.insertBefore('less', 'property', {\r\n\t'variable': [\r\n\t\t// Variable declaration (the colon must be consumed!)\r\n\t\t{\r\n\t\t\tpattern: /@[\\w-]+\\s*:/,\r\n\t\t\tinside: {\r\n\t\t\t\t\"punctuation\": /:/\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Variable usage\r\n\t\t/@@?[\\w-]+/\r\n\t],\r\n\t'mixin-usage': {\r\n\t\tpattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'function'\r\n\t}\r\n});\r\n\r\nPrism.languages.livescript = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])#.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'interpolated-string': {\r\n\t\t/* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\r\n\t\t* forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\r\n\t\tpattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'variable': {\r\n\t\t\t\tpattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation-punctuation': {\r\n\t\t\t\t\t\tpattern: /^#\\{|\\}$/,\r\n\t\t\t\t\t\talias: 'variable'\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// See rest below\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': /[\\s\\S]+/\r\n\t\t}\r\n\t},\r\n\t'string': [\r\n\t\t{\r\n\t\t\tpattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /<\\[[\\s\\S]*?\\]>/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t/\\\\[^\\s,;\\])}]+/\r\n\t],\r\n\t'regex': [\r\n\t\t{\r\n\t\t\tpattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'comment': {\r\n\t\t\t\t\tpattern: /(^|[^\\\\])#.*/,\r\n\t\t\t\t\tlookbehind: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'keyword': {\r\n\t\tpattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'keyword-operator': {\r\n\t\tpattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'boolean': {\r\n\t\tpattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'argument': {\r\n\t\t// Don't match .&. nor &&\r\n\t\tpattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'number': /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\r\n\t'identifier': /[a-z_](?:-?[a-z]|[\\d_])*/i,\r\n\t'operator': [\r\n\t\t// Spaced .\r\n\t\t{\r\n\t\t\tpattern: /( )\\.(?= )/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t// Full list, in order:\r\n\t\t// .= .~ .. ...\r\n\t\t// .&. .^. .<<. .>>. .>>>.\r\n\t\t// := :: ::=\r\n\t\t// &&\r\n\t\t// || |>\r\n\t\t// < << <<< <<<<\r\n\t\t// <- <-- <-! <--!\r\n\t\t// <~ <~~ <~! <~~!\r\n\t\t// <| <= <?\r\n\t\t// > >> >= >?\r\n\t\t// - -- -> -->\r\n\t\t// + ++\r\n\t\t// @ @@\r\n\t\t// % %%\r\n\t\t// * **\r\n\t\t// ! != !~=\r\n\t\t// !~> !~~>\r\n\t\t// !-> !-->\r\n\t\t// ~ ~> ~~> ~=\r\n\t\t// = ==\r\n\t\t// ^ ^^\r\n\t\t// / ?\r\n\t\t/\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\r\n\t],\r\n\t'punctuation': /[(){}\\[\\]|.,:;`]/\r\n};\r\n\r\nPrism.languages.livescript['interpolated-string'].inside['interpolation'].inside.rest = Prism.languages.livescript;\r\nPrism.languages.lolcode = {\r\n\t'comment': [\r\n\t\t/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/,\r\n\t\t/\\bBTW.+/\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /\"(?::.|[^\"])*\"/,\r\n\t\tinside: {\r\n\t\t\t'variable': /:\\{[^}]+\\}/,\r\n\t\t\t'symbol': [\r\n\t\t\t\t/:\\([a-f\\d]+\\)/i,\r\n\t\t\t\t/:\\[[^\\]]+\\]/,\r\n\t\t\t\t/:[)>o\":]/\r\n\t\t\t]\r\n\t\t},\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': /(?:-|\\b)\\d*\\.?\\d+/,\r\n\t'symbol': {\r\n\t\tpattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'keyword': /A(?=\\s)/\r\n\t\t}\r\n\t},\r\n\t'label': {\r\n\t\tpattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'string'\r\n\t},\r\n\t'function': {\r\n\t\tpattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'keyword': [\r\n\t\t{\r\n\t\t\tpattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t/'Z(?=\\s|,|$)/\r\n\t],\r\n\t'boolean': {\r\n\t\tpattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'variable': {\r\n\t\tpattern: /(^|\\s)IT(?=\\s|,|$)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'operator': {\r\n\t\tpattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'punctuation': /\\.{3}|…|,|!/\r\n};\r\nPrism.languages.lua = {\r\n\t'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\r\n\t// \\z may be used to skip the following space\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\r\n\t'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\r\n\t'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\r\n\t'operator': [\r\n\t\t/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\r\n\t\t{\r\n\t\t\t// Match \"..\" but don't break \"...\"\r\n\t\t\tpattern: /(^|[^.])\\.\\.(?!\\.)/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'punctuation': /[\\[\\](){},;]|\\.+|:+/\r\n};\r\nPrism.languages.makefile = {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\r\n\t// Built-in target names\r\n\t'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\r\n\r\n\t// Targets\r\n\t'symbol': {\r\n\t\tpattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\r\n\t\tinside: {\r\n\t\t\t'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\r\n\t\t}\r\n\t},\r\n\t'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\r\n\r\n\t'keyword': [\r\n\t\t// Directives\r\n\t\t/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\r\n\t\t// Functions\r\n\t\t{\r\n\t\t\tpattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'operator': /(?:::|[?:+!])?=|[|@]/,\r\n\t'punctuation': /[:;(){}]/\r\n};\r\nPrism.languages.markdown = Prism.languages.extend('markup', {});\r\nPrism.languages.insertBefore('markdown', 'prolog', {\r\n\t'blockquote': {\r\n\t\t// > ...\r\n\t\tpattern: /^>(?:[\\t ]*>)*/m,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t'code': [\r\n\t\t{\r\n\t\t\t// Prefixed by 4 spaces or 1 tab\r\n\t\t\tpattern: /^(?: {4}|\\t).+/m,\r\n\t\t\talias: 'keyword'\r\n\t\t},\r\n\t\t{\r\n\t\t\t// `code`\r\n\t\t\t// ``code``\r\n\t\t\tpattern: /``.+?``|`[^`\\n]+`/,\r\n\t\t\talias: 'keyword'\r\n\t\t}\r\n\t],\r\n\t'title': [\r\n\t\t{\r\n\t\t\t// title 1\r\n\t\t\t// =======\r\n\r\n\t\t\t// title 2\r\n\t\t\t// -------\r\n\t\t\tpattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\r\n\t\t\talias: 'important',\r\n\t\t\tinside: {\r\n\t\t\t\tpunctuation: /==+$|--+$/\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t// # title 1\r\n\t\t\t// ###### title 6\r\n\t\t\tpattern: /(^\\s*)#+.+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'important',\r\n\t\t\tinside: {\r\n\t\t\t\tpunctuation: /^#+|#+$/\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'hr': {\r\n\t\t// ***\r\n\t\t// ---\r\n\t\t// * * *\r\n\t\t// -----------\r\n\t\tpattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t'list': {\r\n\t\t// * item\r\n\t\t// + item\r\n\t\t// - item\r\n\t\t// 1. item\r\n\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t'url-reference': {\r\n\t\t// [id]: http://example.com \"Optional title\"\r\n\t\t// [id]: http://example.com 'Optional title'\r\n\t\t// [id]: http://example.com (Optional title)\r\n\t\t// [id]: <http://example.com> \"Optional title\"\r\n\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\r\n\t\tinside: {\r\n\t\t\t'variable': {\r\n\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\r\n\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\r\n\t\t},\r\n\t\talias: 'url'\r\n\t},\r\n\t'bold': {\r\n\t\t// **strong**\r\n\t\t// __strong__\r\n\r\n\t\t// Allow only one line break\r\n\t\tpattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\r\n\t\t}\r\n\t},\r\n\t'italic': {\r\n\t\t// *em*\r\n\t\t// _em_\r\n\r\n\t\t// Allow only one line break\r\n\t\tpattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /^[*_]|[*_]$/\r\n\t\t}\r\n\t},\r\n\t'url': {\r\n\t\t// [example](http://example.com \"Optional title\")\r\n\t\t// [example] [id]\r\n\t\tpattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\r\n\t\tinside: {\r\n\t\t\t'variable': {\r\n\t\t\t\tpattern: /(!?\\[)[^\\]]+(?=\\]$)/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'string': {\r\n\t\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nPrism.languages.markdown['bold'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);\r\nPrism.languages.markdown['italic'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);\r\nPrism.languages.markdown['bold'].inside['italic'] = Prism.util.clone(Prism.languages.markdown['italic']);\r\nPrism.languages.markdown['italic'].inside['bold'] = Prism.util.clone(Prism.languages.markdown['bold']);\r\nPrism.languages.matlab = {\r\n\t'comment': [\r\n\t\t/%\\{[\\s\\S]*?\\}%/,\r\n\t\t/%.+/\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /\\B'(?:''|[^'\\r\\n])*'/,\r\n\t\tgreedy: true\r\n\t},\r\n\t// FIXME We could handle imaginary numbers as a whole\r\n\t'number': /\\b-?(?:\\d*\\.?\\d+(?:[eE][+-]?\\d+)?(?:[ij])?|[ij])\\b/,\r\n\t'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\r\n\t'function': /(?!\\d)\\w+(?=\\s*\\()/,\r\n\t'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\r\n\t'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\r\n};\r\nPrism.languages.mel = {\r\n\t'comment': /\\/\\/.*/,\r\n\t'code': {\r\n\t\tpattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\r\n\t\tgreedy: true,\r\n\t\talias: 'italic',\r\n\t\tinside: {\r\n\t\t\t'delimiter': {\r\n\t\t\t\tpattern: /^`|`$/,\r\n\t\t\t\talias: 'punctuation'\r\n\t\t\t}\r\n\t\t\t// See rest below\r\n\t\t}\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'variable': /\\$\\w+/,\r\n\t'number': /(?:\\b|-)(?:0x[\\da-fA-F]+|\\d+\\.?\\d*)/,\r\n\t'flag': {\r\n\t\tpattern: /-[^\\d\\W]\\w*/,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'keyword': /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\r\n\t'function': /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\r\n\t\r\n\t'operator': [\r\n\t\t/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\r\n\t\t{\r\n\t\t\t// We don't want to match <<\r\n\t\t\tpattern: /(^|[^<])<(?!<)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t// We don't want to match >>\r\n\t\t\tpattern: /(^|[^>])>(?!>)/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'punctuation': /<<|>>|[.,:;?\\[\\](){}]/\r\n};\r\nPrism.languages.mel['code'].inside.rest = Prism.util.clone(Prism.languages.mel);\r\nPrism.languages.mizar = {\r\n\t'comment': /::.+/,\r\n\t'keyword': /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\r\n\t'parameter': {\r\n\t\tpattern: /\\$(?:10|\\d)/,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'variable': /\\w+(?=:)/,\r\n\t'number': /(?:\\b|-)\\d+\\b/,\r\n\t'operator': /\\.\\.\\.|->|&|\\.?=/,\r\n\t'punctuation': /\\(#|#\\)|[,:;\\[\\](){}]/\r\n};\r\nPrism.languages.monkey = {\r\n\t'string': /\"[^\"\\r\\n]*\"/,\r\n\t'comment': [\r\n\t\t/^#Rem\\s+[\\s\\S]*?^#End/im,\r\n\t\t/'.+/\r\n\t],\r\n\t'preprocessor': {\r\n\t\tpattern: /(^[ \\t]*)#.+/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'comment'\r\n\t},\r\n\t'function': /\\w+(?=\\()/,\r\n\t'type-char': {\r\n\t\tpattern: /(\\w)[?%#$]/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'number': {\r\n\t\tpattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'keyword': /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\r\n\t'operator': /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\r\n\t'punctuation': /[.,:;()\\[\\]]/\r\n};\r\nPrism.languages.n4js = Prism.languages.extend('javascript', {\r\n\t// Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\r\n\t'keyword': /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\r\n});\r\n\r\nPrism.languages.insertBefore('n4js', 'function', {\r\n\t// Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\r\n\t'annotation': {\r\n\t\tpattern: /@+\\w+/,\r\n\t\talias: 'operator'\r\n\t}\r\n});\r\n\r\nPrism.languages.n4jsd=Prism.languages.n4js;\r\n\r\nPrism.languages.nasm = {\r\n\t'comment': /;.*$/m,\r\n\t'string': /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t'label': {\r\n\t\tpattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'function'\r\n\t},\r\n\t'keyword': [\r\n\t\t/\\[?BITS (?:16|32|64)\\]?/,\r\n\t\t{\r\n\t\t\tpattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t/(?:extern|global)[^;\\r\\n]*/i,\r\n\t\t/(?:CPU|FLOAT|DEFAULT).*$/m\r\n\t],\r\n\t'register': {\r\n\t\tpattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'number': /(?:\\b|-|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\r\n\t'operator': /[\\[\\]*+\\-\\/%<>=&|$!]/\r\n};\r\n\r\nPrism.languages.nginx = Prism.languages.extend('clike', {\r\n        'comment': {\r\n                pattern: /(^|[^\"{\\\\])#.*/,\r\n                lookbehind: true\r\n        },\r\n        'keyword': /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i\r\n});\r\n\r\nPrism.languages.insertBefore('nginx', 'keyword', {\r\n        'variable': /\\$[a-z_]+/i\r\n});\r\nPrism.languages.nim = {\r\n\t'comment': /#.*/,\r\n\t// Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\r\n\t// Character literals are handled specifically to prevent issues with numeric type suffixes\r\n\t'string': {\r\n\t\tpattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\r\n\t\tgreedy: true\r\n\t},\r\n\t// The negative look ahead prevents wrong highlighting of the .. operator\r\n\t'number': /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\r\n\t'keyword': /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\r\n\t'function': {\r\n\t\tpattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\r\n\t\tinside: {\r\n\t\t\t'operator': /\\*$/\r\n\t\t}\r\n\t},\r\n\t// We don't want to highlight operators inside backticks\r\n\t'ignore': {\r\n\t\tpattern: /`[^`\\r\\n]+`/,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /`/\r\n\t\t}\r\n\t},\r\n\t'operator': {\r\n\t\t// Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\r\n\t\t// but allow the slice operator .. to take precedence over them\r\n\t\t// One can define his own operators in Nim so all combination of operators might be an operator.\r\n\t\tpattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'punctuation': /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\r\n};\r\nPrism.languages.nix = {\r\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\r\n\t'string': {\r\n\t\tpattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'interpolation': {\r\n\t\t\t\t// The lookbehind ensures the ${} is not preceded by \\ or ''\r\n\t\t\t\tpattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'antiquotation': {\r\n\t\t\t\t\t\tpattern: /^\\$(?=\\{)/,\r\n\t\t\t\t\t\talias: 'variable'\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// See rest below\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'url': [\r\n\t\t/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\r\n\t\t{\r\n\t\t\tpattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'antiquotation': {\r\n\t\tpattern: /\\$(?=\\{)/,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'number': /\\b\\d+\\b/,\r\n\t'keyword': /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\r\n\t'function': /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\t'operator': /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\r\n\t'punctuation': /[{}()[\\].,:;]/\r\n};\r\n\r\nPrism.languages.nix.string.inside.interpolation.inside.rest = Prism.util.clone(Prism.languages.nix);\r\n/**\r\n * Original by Jan T. Sott (http://github.com/idleberg)\r\n *\r\n * Includes all commands and plug-ins shipped with NSIS 3.02\r\n */\r\n Prism.languages.nsis = {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'keyword': {\r\n\t\tpattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:CmpU?|Fmt|Op)|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'property': /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\r\n\t'constant': /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\r\n\t'variable': /\\$\\w+/i,\r\n\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee]-?\\d+)?)\\b/,\r\n\t'operator': /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\r\n\t'punctuation': /[{}[\\];(),.:]/,\r\n\t'important': {\r\n\t\tpattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversionsystem|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|tempfile|undef|verbose|warning)\\b/mi,\r\n\t\tlookbehind: true\r\n\t}\r\n};\r\n\r\nPrism.languages.objectivec = Prism.languages.extend('c', {\r\n\t'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\r\n\t'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\r\n\t'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\r\n});\r\n\r\nPrism.languages.ocaml = {\r\n\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\r\n\t'string': [\r\n\t\t{\r\n\t\t\tpattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'number': /\\b-?(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\r\n\t'type': {\r\n\t\tpattern: /\\B['`]\\w*/,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'directive': {\r\n\t\tpattern: /\\B#\\w+/,\r\n\t\talias: 'function'\r\n\t},\r\n\t'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\r\n\t'boolean': /\\b(?:false|true)\\b/,\r\n\t// Custom operators are allowed\r\n\t'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\r\n\t'punctuation': /[(){}\\[\\]|_.,:;]/\r\n};\r\n(function (Prism) {\r\n\t/* OpenCL kernel language */\r\n\tPrism.languages.opencl = Prism.languages.extend('c', {\r\n\t\t// Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\r\n\t\t'keyword': /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\r\n\t\t// Extracted from http://streamcomputing.eu/downloads/?opencl.lang (global-vars, opencl-dev)\r\n\t\t'function-opencl-kernel': {\r\n\t\t\tpattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\r\n\t\t\talias: 'function'\r\n\t\t},\r\n\t\t// Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\r\n\t\t'constant-opencl-kernel': {\r\n\t\t\tpattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\r\n\t\t\talias: 'constant'\r\n\t\t}\r\n\t});\r\n\r\n\tvar attributes = {\r\n\t\t// Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\r\n\t\t'type-opencl-host': {\r\n\t\t\tpattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\r\n\t\t\talias: 'keyword'\r\n\t\t},\r\n\t\t'boolean-opencl-host': {\r\n\t\t\tpattern: /\\bCL_(?:TRUE|FALSE)\\b/,\r\n\t\t\talias: 'boolean'\r\n\t\t},\r\n\t\t// Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\r\n\t\t'constant-opencl-host': {\r\n\t\t\tpattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\r\n\t\t\talias: 'constant'\r\n\t\t},\r\n\t\t// Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\r\n\t\t'function-opencl-host': {\r\n\t\t\tpattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\r\n\t\t\talias: 'function'\r\n\t\t}\r\n\t};\r\n\r\n\t/* OpenCL host API */\r\n\tPrism.languages.insertBefore('c', 'keyword', attributes);\r\n\t// Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\r\n\tattributes['type-opencl-host-c++'] = {\r\n\t\tpattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\r\n\t\talias: 'keyword'\r\n\t};\r\n\t// C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\r\n\tPrism.languages.insertBefore('cpp', 'keyword', attributes);\r\n}(Prism));\r\n\r\nPrism.languages.oz = {\r\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\r\n\t'string': {\r\n\t\tpattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'atom': {\r\n\t\tpattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\r\n\t\tgreedy: true,\r\n\t\talias: 'builtin'\r\n\t},\r\n\t'keyword': /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\r\n\t'function': [\r\n\t\t/[a-z][A-Za-z\\d]*(?=\\()/,\r\n\t\t{\r\n\t\t\tpattern: /(\\{)[A-Z][A-Za-z\\d]*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'number': /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\r\n\t'variable': /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\r\n\t'attr-name': /\\w+(?=:)/,\r\n\t'operator': /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\r\n\t'punctuation': /[\\[\\](){}.:;?]/\r\n};\r\nPrism.languages.parigp = {\r\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\r\n\t'string': {\r\n\t\tpattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t// PARI/GP does not care about white spaces at all\r\n\t// so let's process the keywords to build an appropriate regexp\r\n\t// (e.g. \"b *r *e *a *k\", etc.)\r\n\t'keyword': (function () {\r\n\t\tvar keywords = [\r\n\t\t\t'breakpoint', 'break', 'dbg_down', 'dbg_err', 'dbg_up', 'dbg_x',\r\n\t\t\t'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime',\r\n\t\t\t'forstep', 'forsubgroup', 'forvec', 'for', 'iferr', 'if',\r\n\t\t\t'local', 'my', 'next', 'return', 'until', 'while'\r\n\t\t];\r\n\t\tkeywords = keywords.map(function (keyword) {\r\n\t\t\treturn keyword.split('').join(' *');\r\n\t\t}).join('|');\r\n\t\treturn RegExp('\\\\b(?:' + keywords + ')\\\\b');\r\n\t}()),\r\n\t'function': /\\w[\\w ]*?(?= *\\()/,\r\n\t'number': {\r\n\t\t// The lookbehind and the negative lookahead prevent from breaking the .. operator\r\n\t\tpattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'operator': /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\r\n\t'punctuation': /[\\[\\]{}().,:;|]/\r\n};\r\nPrism.languages.parser = Prism.languages.extend('markup', {\r\n\t'keyword': {\r\n\t\tpattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'variable': {\r\n\t\tpattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /\\.|:+/\r\n\t\t}\r\n\t},\r\n\t'function': {\r\n\t\tpattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'keyword': {\r\n\t\t\t\tpattern: /(^@)(?:GET_|SET_)/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\.|:+/\r\n\t\t}\r\n\t},\r\n\t'escape': {\r\n\t\tpattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\r\n\t\talias: 'builtin'\r\n\t},\r\n\t'punctuation': /[\\[\\](){};]/\r\n});\r\nPrism.languages.insertBefore('parser', 'keyword', {\r\n\t'parser-comment': {\r\n\t\tpattern: /(\\s)#.*/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'comment'\r\n\t},\r\n\t'expression': {\r\n\t\t// Allow for 3 levels of depth\r\n\t\tpattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\r\n\t\tgreedy: true,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'string': {\r\n\t\t\t\tpattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'keyword': Prism.languages.parser.keyword,\r\n\t\t\t'variable': Prism.languages.parser.variable,\r\n\t\t\t'function': Prism.languages.parser.function,\r\n\t\t\t'boolean': /\\b(?:true|false)\\b/,\r\n\t\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\r\n\t\t\t'escape': Prism.languages.parser.escape,\r\n\t\t\t'operator': /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\r\n\t\t\t'punctuation': Prism.languages.parser.punctuation\r\n\t\t}\r\n\t}\r\n});\r\nPrism.languages.insertBefore('inside', 'punctuation', {\r\n\t'expression': Prism.languages.parser.expression,\r\n\t'keyword': Prism.languages.parser.keyword,\r\n\t'variable': Prism.languages.parser.variable,\r\n\t'function': Prism.languages.parser.function,\r\n\t'escape': Prism.languages.parser.escape,\r\n\t'parser-punctuation': {\r\n\t\tpattern: Prism.languages.parser.punctuation,\r\n\t\talias: 'punctuation'\r\n\t}\r\n}, Prism.languages.parser['tag'].inside['attr-value']);\r\n// Based on Free Pascal\r\n\r\n/* TODO\r\n\tSupport inline asm ?\r\n*/\r\n\r\nPrism.languages.pascal = {\r\n\t'comment': [\r\n\t\t/\\(\\*[\\s\\S]+?\\*\\)/,\r\n\t\t/\\{[\\s\\S]+?\\}/,\r\n\t\t/\\/\\/.*/\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\r\n\t\tgreedy: true\r\n\t},\r\n\t'keyword': [\r\n\t\t{\r\n\t\t\t// Turbo Pascal\r\n\t\t\tpattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t// Free Pascal\r\n\t\t\tpattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t// Object Pascal\r\n\t\t\tpattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t// Modifiers\r\n\t\t\tpattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'number': [\r\n\t\t// Hexadecimal, octal and binary\r\n\t\t/[+-]?(?:[&%]\\d+|\\$[a-f\\d]+)/i,\r\n\t\t// Decimal\r\n\t\t/([+-]|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\r\n\t],\r\n\t'operator': [\r\n\t\t/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,\r\n\t\t{\r\n\t\t\tpattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\r\n};\r\nPrism.languages.perl = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\t// POD\r\n\t\t\tpattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\$])#.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t// TODO Could be nice to handle Heredoc too.\r\n\t'string': [\r\n\t\t// q/.../\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// q a...a\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// q(...)\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// q{...}\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// q[...]\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// q<...>\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\r\n\t\t// \"...\", `...`\r\n\t\t{\r\n\t\t\tpattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\r\n\t\t// '...'\r\n\t\t// FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\r\n\t\t{\r\n\t\t\tpattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'regex': [\r\n\t\t// m/.../\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// m a...a\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// m(...)\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// m{...}\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// m[...]\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// m<...>\r\n\t\t{\r\n\t\t\tpattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\r\n\t\t// The lookbehinds prevent -s from breaking\r\n\t\t// FIXME We don't handle change of separator like s(...)[...]\r\n\t\t// s/.../.../\r\n\t\t{\r\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// s a...a...a\r\n\t\t{\r\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// s(...)(...)\r\n\t\t{\r\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// s{...}{...}\r\n\t\t{\r\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// s[...][...]\r\n\t\t{\r\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// s<...><...>\r\n\t\t{\r\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\r\n\t\t// /.../\r\n\t\t// The look-ahead tries to prevent two divisions on\r\n\t\t// the same line from being highlighted as regex.\r\n\t\t// This does not support multi-line regex.\r\n\t\t{\r\n\t\t\tpattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\r\n\t// FIXME Not sure about the handling of ::, ', and #\r\n\t'variable': [\r\n\t\t// ${^POSTMATCH}\r\n\t\t/[&*$@%]\\{\\^[A-Z]+\\}/,\r\n\t\t// $^V\r\n\t\t/[&*$@%]\\^[A-Z_]/,\r\n\t\t// ${...}\r\n\t\t/[&*$@%]#?(?=\\{)/,\r\n\t\t// $foo\r\n\t\t/[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,\r\n\t\t// $1\r\n\t\t/[&*$@%]\\d+/,\r\n\t\t// $_, @_, %!\r\n\t\t// The negative lookahead prevents from breaking the %= operator\r\n\t\t/(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\r\n\t],\r\n\t'filehandle': {\r\n\t\t// <>, <FOO>, _\r\n\t\tpattern: /<(?![<=])\\S*>|\\b_\\b/,\r\n\t\talias: 'symbol'\r\n\t},\r\n\t'vstring': {\r\n\t\t// v1.2, 1.2.3\r\n\t\tpattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\r\n\t\talias: 'string'\r\n\t},\r\n\t'function': {\r\n\t\tpattern: /sub [a-z0-9_]+/i,\r\n\t\tinside: {\r\n\t\t\tkeyword: /sub/\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\r\n\t'number': /\\b-?(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\r\n\t'operator': /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\r\n\t'punctuation': /[{}[\\];(),:]/\r\n};\r\n\r\n/**\r\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\r\n * Modified by Miles Johnson: http://milesj.me\r\n *\r\n * Supports the following:\r\n * \t\t- Extends clike syntax\r\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\r\n * \t\t- Smarter constant and function matching\r\n *\r\n * Adds the following new token classes:\r\n * \t\tconstant, delimiter, variable, function, package\r\n */\r\n\r\nPrism.languages.php = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\r\n\t'constant': /\\b[A-Z0-9_]{2,}\\b/,\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n\t\tlookbehind: true\r\n\t}\r\n});\r\n\r\n// Shell-like comments are matched after strings, because they are less\r\n// common than strings containing hashes...\r\nPrism.languages.insertBefore('php', 'class-name', {\r\n\t'shell-comment': {\r\n\t\tpattern: /(^|[^\\\\])#.*/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'comment'\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('php', 'keyword', {\r\n\t'delimiter': {\r\n\t\tpattern: /\\?>|<\\?(?:php|=)?/i,\r\n\t\talias: 'important'\r\n\t},\r\n\t'variable': /\\$\\w+\\b/i,\r\n\t'package': {\r\n\t\tpattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\tpunctuation: /\\\\/\r\n\t\t}\r\n\t}\r\n});\r\n\r\n// Must be defined after the function pattern\r\nPrism.languages.insertBefore('php', 'operator', {\r\n\t'property': {\r\n\t\tpattern: /(->)[\\w]+/,\r\n\t\tlookbehind: true\r\n\t}\r\n});\r\n\r\n// Add HTML support if the markup language exists\r\nif (Prism.languages.markup) {\r\n\r\n\t// Tokenize all inline PHP blocks that are wrapped in <?php ?>\r\n\t// This allows for easy PHP + markup highlighting\r\n\tPrism.hooks.add('before-highlight', function(env) {\r\n\t\tif (env.language !== 'php' || !/(?:<\\?php|<\\?)/ig.test(env.code)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tenv.tokenStack = [];\r\n\r\n\t\tenv.backupCode = env.code;\r\n\t\tenv.code = env.code.replace(/(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/ig, function(match) {\r\n\t\t\tvar i = env.tokenStack.length;\r\n\t\t\t// Check for existing strings\r\n\t\t\twhile (env.backupCode.indexOf('___PHP' + i + '___') !== -1)\r\n\t\t\t\t++i;\r\n\r\n\t\t\t// Create a sparse array\r\n\t\t\tenv.tokenStack[i] = match;\r\n\r\n\t\t\treturn '___PHP' + i + '___';\r\n\t\t});\r\n\r\n\t\t// Switch the grammar to markup\r\n\t\tenv.grammar = Prism.languages.markup;\r\n\t});\r\n\r\n\t// Restore env.code for other plugins (e.g. line-numbers)\r\n\tPrism.hooks.add('before-insert', function(env) {\r\n\t\tif (env.language === 'php' && env.backupCode) {\r\n\t\t\tenv.code = env.backupCode;\r\n\t\t\tdelete env.backupCode;\r\n\t\t}\r\n\t});\r\n\r\n\t// Re-insert the tokens after highlighting\r\n\tPrism.hooks.add('after-highlight', function(env) {\r\n\t\tif (env.language !== 'php' || !env.tokenStack) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Switch the grammar back\r\n\t\tenv.grammar = Prism.languages.php;\r\n\r\n\t\tfor (var i = 0, keys = Object.keys(env.tokenStack); i < keys.length; ++i) {\r\n\t\t\tvar k = keys[i];\r\n\t\t\tvar t = env.tokenStack[k];\r\n\r\n\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns\r\n\t\t\tenv.highlightedCode = env.highlightedCode.replace('___PHP' + k + '___',\r\n\t\t\t\t\t\"<span class=\\\"token php language-php\\\">\" +\r\n\t\t\t\t\tPrism.highlight(t, env.grammar, 'php').replace(/\\$/g, '$$$$') +\r\n\t\t\t\t\t\"</span>\");\r\n\t\t}\r\n\r\n\t\tenv.element.innerHTML = env.highlightedCode;\r\n\t});\r\n}\r\n;\r\nPrism.languages.insertBefore('php', 'variable', {\r\n\t'this': /\\$this\\b/,\r\n\t'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\r\n\t'scope': {\r\n\t\tpattern: /\\b[\\w\\\\]+::/,\r\n\t\tinside: {\r\n\t\t\tkeyword: /static|self|parent/,\r\n\t\t\tpunctuation: /::|\\\\/\r\n\t\t}\r\n\t}\r\n});\r\nPrism.languages.powershell = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^`])<#[\\s\\S]*?#>/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^`])#.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'string': [\r\n\t\t{\r\n\t\t\tpattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'function': {\r\n\t\t\t\t\tpattern: /[^`]\\$\\(.*?\\)/,\r\n\t\t\t\t\t// Populated at end of file\r\n\t\t\t\t\tinside: {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /'(?:[^']|'')*'/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t// Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\r\n\t'namespace': /\\[[a-z][\\s\\S]*?\\]/i,\r\n\t'boolean': /\\$(?:true|false)\\b/i,\r\n\t'variable': /\\$\\w+\\b/i,\r\n\t// Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\r\n\t// Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\r\n\t// Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\r\n\t'function': [\r\n\t\t/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i,\r\n\t\t/\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\r\n\t],\r\n\t// per http://technet.microsoft.com/en-us/library/hh847744.aspx\r\n\t'keyword': /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\r\n\t'operator': {\r\n\t\tpattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'punctuation': /[|{}[\\];(),.]/\r\n};\r\n\r\n// Variable interpolation inside strings, and nested expressions\r\nPrism.languages.powershell.string[0].inside.boolean = Prism.languages.powershell.boolean;\r\nPrism.languages.powershell.string[0].inside.variable = Prism.languages.powershell.variable;\r\nPrism.languages.powershell.string[0].inside.function.inside = Prism.util.clone(Prism.languages.powershell);\r\n\r\nPrism.languages.processing = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\r\n\t'operator': /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\r\n});\r\nPrism.languages.insertBefore('processing', 'number', {\r\n\t// Special case: XML is a type\r\n\t'constant': /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\r\n\t'type': {\r\n\t\tpattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\r\n\t\talias: 'variable'\r\n\t}\r\n});\r\n\r\n// Spaces are allowed between function name and parenthesis\r\nPrism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/;\r\n\r\n// Class-names is not styled by default\r\nPrism.languages.processing['class-name'].alias = 'variable';\r\nPrism.languages.prolog = {\r\n\t// Syntax depends on the implementation\r\n\t'comment': [\r\n\t\t/%.+/,\r\n\t\t/\\/\\*[\\s\\S]*?\\*\\//\r\n\t],\r\n\t// Depending on the implementation, strings may allow escaped newlines and quote-escape\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'builtin': /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\r\n\t'variable': /\\b[A-Z_]\\w*/,\r\n\t// FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\r\n\t'function': /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\r\n\t'number': /\\b\\d+\\.?\\d*/,\r\n\t// Custom operators are allowed\r\n\t'operator': /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\r\n\t'punctuation': /[(){}\\[\\],]/\r\n};\r\nPrism.languages.properties = {\r\n\t'comment': /^[ \\t]*[#!].*$/m,\r\n\t'attr-value': {\r\n\t\tpattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\r\n\t'punctuation': /[=:]/\r\n};\r\nPrism.languages.protobuf = Prism.languages.extend('clike', {\r\n\tkeyword: /\\b(?:package|import|message|enum)\\b/,\r\n\tbuiltin: /\\b(?:required|repeated|optional|reserved)\\b/,\r\n\tprimitive: {\r\n\t\tpattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\r\n\t\talias: 'symbol'\r\n\t}\r\n});\r\n\r\n(function(Prism) {\r\n\t// TODO:\r\n\t// - Add CSS highlighting inside <style> tags\r\n\t// - Add support for multi-line code blocks\r\n\t// - Add support for interpolation #{} and !{}\r\n\t// - Add support for tag interpolation #[]\r\n\t// - Add explicit support for plain text using |\r\n\t// - Add support for markup embedded in plain text\r\n\r\n\tPrism.languages.pug = {\r\n\r\n\t\t// Multiline stuff should appear before the rest\r\n\r\n\t\t// This handles both single-line and multi-line comments\r\n\t\t'comment': {\r\n\t\t\tpattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\r\n\t\t// All the tag-related part is in lookbehind\r\n\t\t// so that it can be highlighted by the \"tag\" pattern\r\n\t\t'multiline-script': {\r\n\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// See at the end of the file for known filters\r\n\t\t'filter': {\r\n\t\t\tpattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'filter-name': {\r\n\t\t\t\t\tpattern: /^:[\\w-]+/,\r\n\t\t\t\t\talias: 'variable'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'multiline-plain-text': {\r\n\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'markup': {\r\n\t\t\tpattern: /(^[\\t ]*)<.+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\trest: Prism.languages.markup\r\n\t\t\t}\r\n\t\t},\r\n\t\t'doctype': {\r\n\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\r\n\t\t// This handle all conditional and loop keywords\r\n\t\t'flow-control': {\r\n\t\t\tpattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'each': {\r\n\t\t\t\t\tpattern: /^each .+? in\\b/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,\r\n\t\t\t\t\t\t'punctuation': /,/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'branch': {\r\n\t\t\t\t\tpattern: /^(?:if|unless|else|case|when|default|while)\\b/,\r\n\t\t\t\t\talias: 'keyword'\r\n\t\t\t\t},\r\n\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t}\r\n\t\t},\r\n\t\t'keyword': {\r\n\t\t\tpattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'mixin': [\r\n\t\t\t// Declaration\r\n\t\t\t{\r\n\t\t\t\tpattern: /(^[\\t ]*)mixin .+/m,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'keyword': /^mixin/,\r\n\t\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,\r\n\t\t\t\t\t'punctuation': /[(),.]/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Usage\r\n\t\t\t{\r\n\t\t\t\tpattern: /(^[\\t ]*)\\+.+/m,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'name': {\r\n\t\t\t\t\t\tpattern: /^\\+\\w+/,\r\n\t\t\t\t\t\talias: 'function'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'rest': Prism.languages.javascript\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t'script': {\r\n\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'plain-text': {\r\n\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'tag': {\r\n\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'attributes': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\r\n\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\r\n\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\t'attr-value': {\r\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\r\n\t\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\r\n\t\t\t\t\t\t\t'punctuation': /[!=(),]+/\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t'punctuation': /:/\r\n\t\t\t}\r\n\t\t},\r\n\t\t'code': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t'punctuation': /[.\\-!=|]+/\r\n\t};\r\n\r\n\tvar filter_pattern = '(^([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\r\n\r\n\t// Non exhaustive list of available filters and associated languages\r\n\tvar filters = [\r\n\t\t{filter:'atpl',language:'twig'},\r\n\t\t{filter:'coffee',language:'coffeescript'},\r\n\t\t'ejs',\r\n\t\t'handlebars',\r\n\t\t'hogan',\r\n\t\t'less',\r\n\t\t'livescript',\r\n\t\t'markdown',\r\n\t\t'mustache',\r\n\t\t'plates',\r\n\t\t{filter:'sass',language:'scss'},\r\n\t\t'stylus',\r\n\t\t'swig'\r\n\r\n\t];\r\n\tvar all_filters = {};\r\n\tfor (var i = 0, l = filters.length; i < l; i++) {\r\n\t\tvar filter = filters[i];\r\n\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;\r\n\t\tif (Prism.languages[filter.language]) {\r\n\t\t\tall_filters['filter-' + filter.filter] = {\r\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'filter-name': {\r\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\r\n\t\t\t\t\t\talias: 'variable'\r\n\t\t\t\t\t},\r\n\t\t\t\t\trest: Prism.languages[filter.language]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tPrism.languages.insertBefore('pug', 'filter', all_filters);\r\n\r\n}(Prism));\r\n\r\n(function (Prism) {\r\n\tPrism.languages.puppet = {\r\n\t\t'heredoc': [\r\n\t\t\t// Matches the content of a quoted heredoc string (subject to interpolation)\r\n\t\t\t{\r\n\t\t\t\tpattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'string',\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t// Matches the end tag\r\n\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/\r\n\t\t\t\t\t// See interpolation below\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Matches the content of an unquoted heredoc string (no interpolation)\r\n\t\t\t{\r\n\t\t\t\tpattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'string',\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t// Matches the end tag\r\n\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Matches the start tag of heredoc strings\r\n\t\t\t{\r\n\t\t\t\tpattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\r\n\t\t\t\talias: 'string',\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': {\r\n\t\t\t\t\t\tpattern: /(\\().+?(?=\\))/,\r\n\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t'multiline-comment': {\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'comment'\r\n\t\t},\r\n\t\t'regex': {\r\n\t\t\t// Must be prefixed with the keyword \"node\" or a non-word char\r\n\t\t\tpattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t// Extended regexes must have the x flag. They can contain single-line comments.\r\n\t\t\t\t'extended-regex': {\r\n\t\t\t\t\tpattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'comment': /#.*/\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'comment': {\r\n\t\t\tpattern: /(^|[^\\\\])#.*/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'string': {\r\n\t\t\t// Allow for one nested level of double quotes inside interpolation\r\n\t\t\tpattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\r\n\t\t\tinside: {\r\n\t\t\t\t'double-quoted': {\r\n\t\t\t\t\tpattern: /^\"[\\s\\S]*\"$/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t// See interpolation below\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'variable': {\r\n\t\t\tpattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /::/\r\n\t\t\t}\r\n\t\t},\r\n\t\t'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\r\n\t\t'function': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /(\\.)(?!\\d)\\w+/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\r\n\t\t],\r\n\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\r\n\t\t'boolean': /\\b(?:true|false)\\b/,\r\n\t\t// Includes words reserved for future use\r\n\t\t'keyword': /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\r\n\t\t'datatype': {\r\n\t\t\tpattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\r\n\t\t\talias: 'symbol'\r\n\t\t},\r\n\t\t'operator': /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\r\n\t\t'punctuation': /[\\[\\]{}().,;]|:+/\r\n\t};\r\n\r\n\tvar interpolation = [\r\n\t\t{\r\n\t\t\t// Allow for one nested level of braces inside interpolation\r\n\t\t\tpattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'short-variable': {\r\n\t\t\t\t\t// Negative look-ahead prevent wrong highlighting of functions\r\n\t\t\t\t\tpattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'variable',\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'punctuation': /::/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'delimiter': {\r\n\t\t\t\t\tpattern: /^\\$/,\r\n\t\t\t\t\talias: 'variable'\r\n\t\t\t\t},\r\n\t\t\t\trest: Prism.util.clone(Prism.languages.puppet)\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'variable',\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /::/\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\tPrism.languages.puppet['heredoc'][0].inside.interpolation = interpolation;\r\n\tPrism.languages.puppet['string'].inside['double-quoted'].inside.interpolation = interpolation;\r\n}(Prism));\r\n(function (Prism) {\r\n\tPrism.languages.pure = {\r\n\t\t'comment': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t/#!.+/\r\n\t\t],\r\n\t\t'inline-lang': {\r\n\t\t\tpattern: /%<[\\s\\S]+?%>/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'lang': {\r\n\t\t\t\t\tpattern: /(^%< *)-\\*-.+?-\\*-/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'comment'\r\n\t\t\t\t},\r\n\t\t\t\t'delimiter': {\r\n\t\t\t\t\tpattern: /^%<.*|%>$/,\r\n\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'string': {\r\n\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'number': {\r\n\t\t\t// The look-behind prevents wrong highlighting of the .. operator\r\n\t\t\tpattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'keyword': /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\r\n\t\t'function': /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\r\n\t\t'special': {\r\n\t\t\tpattern: /\\b__[a-z]+__\\b/i,\r\n\t\t\talias: 'builtin'\r\n\t\t},\r\n\t\t// Any combination of operator chars can be an operator\r\n\t\t'operator': /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\r\n\t\t// FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\r\n\t\t'punctuation': /[(){}\\[\\];,|]/\r\n\t};\r\n\r\n\tvar inlineLanguages = [\r\n\t\t'c',\r\n\t\t{ lang: 'c++', alias: 'cpp' },\r\n\t\t'fortran',\r\n\t\t'ats',\r\n\t\t'dsp'\r\n\t];\r\n\tvar inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>';\r\n\r\n\tinlineLanguages.forEach(function (lang) {\r\n\t\tvar alias = lang;\r\n\t\tif (typeof lang !== 'string') {\r\n\t\t\talias = lang.alias;\r\n\t\t\tlang = lang.lang;\r\n\t\t}\r\n\t\tif (Prism.languages[alias]) {\r\n\t\t\tvar o = {};\r\n\t\t\to['inline-lang-' + alias] = {\r\n\t\t\t\tpattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g,'\\\\$1')), 'i'),\r\n\t\t\t\tinside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\r\n\t\t\t};\r\n\t\t\to['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\r\n\t\t\tPrism.languages.insertBefore('pure', 'inline-lang', o);\r\n\t\t}\r\n\t});\r\n\r\n\t// C is the default inline language\r\n\tif (Prism.languages.c) {\r\n\t\tPrism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\r\n\t}\r\n\r\n}(Prism));\r\nPrism.languages.python = {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])#.*/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'triple-quoted-string': {\r\n\t\tpattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\r\n\t\tgreedy: true,\r\n\t\talias: 'string'\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'function': {\r\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'class-name': {\r\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'keyword': /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\r\n\t'builtin':/\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\r\n\t'boolean': /\\b(?:True|False|None)\\b/,\r\n\t'number': /\\b-?(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\r\n\t'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\r\n\t'punctuation': /[{}[\\];(),.:]/\r\n};\r\n\r\nPrism.languages.q = {\r\n\t'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n\t'comment': [\r\n\t\t// From http://code.kx.com/wiki/Reference/Slash:\r\n\t\t// When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\r\n\t\t{\r\n\r\n\t\t\tpattern: /([\\t )\\]}])\\/.*/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t// From http://code.kx.com/wiki/Reference/Slash:\r\n\t\t// A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\r\n\t\t// A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\r\n\t\t// If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\r\n\t\t// The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\r\n\t\t{\r\n\t\t\tpattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t// From http://code.kx.com/wiki/Reference/Slash:\r\n\t\t// A \\ on a line by itself with no preceding matching / will comment to end of file.\r\n\t\t/^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\r\n\r\n\t\t/^#!.+/m\r\n\t],\r\n\t'symbol': /`(?::\\S+|[\\w.]*)/,\r\n\t'datetime': {\r\n\t\tpattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\r\n\t\talias: 'number'\r\n\t},\r\n\t// The negative look-ahead prevents bad highlighting\r\n\t// of verbs 0: and 1:\r\n\t'number': /\\b-?(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\r\n\t'keyword': /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\r\n\t'adverb': {\r\n\t\tpattern: /['\\/\\\\]:?|\\beach\\b/,\r\n\t\talias: 'function'\r\n\t},\r\n\t'verb': {\r\n\t\tpattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'punctuation': /[(){}\\[\\];.]/\r\n};\r\nPrism.languages.qore = Prism.languages.extend('clike', {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t// Overridden to allow unescaped multi-line strings\r\n\t'string': {\r\n\t\tpattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'variable': /\\$(?!\\d)\\w+\\b/,\r\n\t'keyword': /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\r\n\t'number': /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\r\n\t'boolean': /\\b(?:true|false)\\b/i,\r\n\t'operator': {\r\n\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'function': /\\$?\\b(?!\\d)\\w+(?=\\()/\r\n});\r\nPrism.languages.r = {\r\n\t'comment': /#.*/,\r\n\t'string': {\r\n\t\tpattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'percent-operator': {\r\n\t\t// Includes user-defined operators\r\n\t\t// and %%, %*%, %/%, %in%, %o%, %x%\r\n\t\tpattern: /%[^%\\s]*%/,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'boolean': /\\b(?:TRUE|FALSE)\\b/,\r\n\t'ellipsis': /\\.\\.(?:\\.|\\d+)/,\r\n\t'number': [\r\n\t\t/\\b(?:NaN|Inf)\\b/,\r\n\t\t/\\b(?:0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\d*\\.?\\d+)(?:[EePp][+-]?\\d+)?[iL]?\\b/\r\n\t],\r\n\t'keyword': /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\r\n\t'operator': /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\r\n\t'punctuation': /[(){}\\[\\],;]/\r\n};\r\n(function(Prism) {\r\n\r\nvar javascript = Prism.util.clone(Prism.languages.javascript);\r\n\r\nPrism.languages.jsx = Prism.languages.extend('markup', javascript);\r\nPrism.languages.jsx.tag.pattern= /<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w\\.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+|(?:\\{[^}]*\\})))?|\\{\\.{3}\\w+\\}))*\\s*\\/?>/i;\r\n\r\nPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\r\n\r\nPrism.languages.insertBefore('inside', 'attr-name', {\r\n\t'spread': {\r\n\t\tpattern: /\\{\\.{3}\\w+\\}/,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /[{}]|\\.{3}/,\r\n\t\t\t'attr-value': /\\w+/\r\n\t\t}\r\n\t}\r\n}, Prism.languages.jsx.tag);\r\n\r\nvar jsxExpression = Prism.util.clone(Prism.languages.jsx);\r\n\r\ndelete jsxExpression.punctuation;\r\n\r\njsxExpression = Prism.languages.insertBefore('jsx', 'operator', {\r\n  'punctuation': /=(?={)|[{}[\\];(),.:]/\r\n}, { jsx: jsxExpression });\r\n\r\nPrism.languages.insertBefore('inside', 'attr-value',{\r\n\t'script': {\r\n\t\t// Allow for one level of nesting\r\n\t\tpattern: /=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,\r\n\t\tinside: jsxExpression,\r\n\t\t'alias': 'language-javascript'\r\n\t}\r\n}, Prism.languages.jsx.tag);\r\n\r\n}(Prism));\r\n\r\nPrism.languages.renpy= {\r\n\t// TODO Write tests.\r\n\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])#.+/,\r\n\t\tlookbehind: true\r\n\t},\r\n\r\n\t'string': {\r\n\t\tpattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\r\n\t\tgreedy: true\r\n\t},\r\n\r\n\t'function' : /[a-z_]\\w*(?=\\()/i,\r\n\r\n\t'property': /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\r\n\r\n\t'tag': /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\r\n\r\n\t'keyword' : /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\r\n\r\n\t'boolean' : /\\b(?:[Tt]rue|[Ff]alse)\\b/,\r\n\r\n\t'number' : /\\b-?(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\r\n\r\n\t'operator' : /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\r\n\r\n\t'punctuation' : /[{}[\\];(),.:]/\r\n};\r\n\r\nPrism.languages.reason = Prism.languages.extend('clike', {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t// 'class-name' must be matched *after* 'constructor' defined below\r\n\t'class-name': /\\b[A-Z]\\w*/,\r\n\t'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\r\n\t'operator': /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\r\n});\r\nPrism.languages.insertBefore('reason', 'class-name', {\r\n\t'character': {\r\n\t\tpattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\r\n\t\talias: 'string'\r\n\t},\r\n\t'constructor': {\r\n\t\t// Negative look-ahead prevents from matching things like String.capitalize\r\n\t\tpattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'label': {\r\n\t\tpattern: /\\b[a-z]\\w*(?=::)/,\r\n\t\talias: 'symbol'\r\n\t}\r\n});\r\n\r\n// We can't match functions property, so let's not even try.\r\ndelete Prism.languages.reason.function;\r\nPrism.languages.rest = {\r\n\t'table': [\r\n\t\t{\r\n\t\t\tpattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /\\||(?:\\+[=-]+)+\\+/\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /[=-]+/\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\t// Directive-like patterns\r\n\r\n\t'substitution-def': {\r\n\t\tpattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'substitution': {\r\n\t\t\t\tpattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\r\n\t\t\t\talias: 'attr-value',\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^\\||\\|$/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'directive': {\r\n\t\t\t\tpattern: /( +)[^:]+::/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'function',\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /::$/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'link-target': [\r\n\t\t{\r\n\t\t\tpattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'string',\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^\\[|\\]$/\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'string',\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^_|:$/\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'directive': {\r\n\t\tpattern: /(^\\s*\\.\\. )[^:]+::/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'function',\r\n\t\tinside: {\r\n\t\t\t'punctuation': /::$/\r\n\t\t}\r\n\t},\r\n\t'comment': {\r\n\t\t// The two alternatives try to prevent highlighting of blank comments\r\n\t\tpattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\r\n\t'title': [\r\n\t\t// Overlined and underlined\r\n\t\t{\r\n\t\t\tpattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\r\n\t\t\t\t'important': /.+/\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Underlined only\r\n\t\t{\r\n\t\t\tpattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\r\n\t\t\t\t'important': /.+/\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'hr': {\r\n\t\tpattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t'field': {\r\n\t\tpattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'attr-name'\r\n\t},\r\n\t'command-line-option': {\r\n\t\tpattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\r\n\t\tlookbehind: true,\r\n\t\talias: 'symbol'\r\n\t},\r\n\t'literal-block': {\r\n\t\tpattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\r\n\t\tinside: {\r\n\t\t\t'literal-block-punctuation': {\r\n\t\t\t\tpattern: /^::/,\r\n\t\t\t\talias: 'punctuation'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'quoted-literal-block': {\r\n\t\tpattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\r\n\t\tinside: {\r\n\t\t\t'literal-block-punctuation': {\r\n\t\t\t\tpattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\r\n\t\t\t\talias: 'punctuation'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'list-bullet': {\r\n\t\tpattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\r\n\t\tlookbehind: true,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t'doctest-block': {\r\n\t\tpattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /^>>>/\r\n\t\t}\r\n\t},\r\n\r\n\t'inline': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'bold': {\r\n\t\t\t\t\tpattern: /(^\\*\\*).+(?=\\*\\*$)/,\r\n\t\t\t\t\tlookbehind: true\r\n\t\t\t\t},\r\n\t\t\t\t'italic': {\r\n\t\t\t\t\tpattern: /(^\\*).+(?=\\*$)/,\r\n\t\t\t\t\tlookbehind: true\r\n\t\t\t\t},\r\n\t\t\t\t'inline-literal': {\r\n\t\t\t\t\tpattern: /(^``).+(?=``$)/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'symbol'\r\n\t\t\t\t},\r\n\t\t\t\t'role': {\r\n\t\t\t\t\tpattern: /^:[^:]+:|:[^:]+:$/,\r\n\t\t\t\t\talias: 'function',\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'punctuation': /^:|:$/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'interpreted-text': {\r\n\t\t\t\t\tpattern: /(^`).+(?=`$)/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'attr-value'\r\n\t\t\t\t},\r\n\t\t\t\t'substitution': {\r\n\t\t\t\t\tpattern: /(^\\|).+(?=\\|$)/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'attr-value'\r\n\t\t\t\t},\r\n\t\t\t\t'punctuation': /\\*\\*?|``?|\\|/\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\t'link': [\r\n\t\t{\r\n\t\t\tpattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\r\n\t\t\talias: 'string',\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^\\[|\\]_$/\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\r\n\t\t\talias: 'string',\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^_?`|`$|`?_?_$/\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\t// Line block start,\r\n\t// quote attribution,\r\n\t// explicit markup start,\r\n\t// and anonymous hyperlink target shortcut (__)\r\n\t'punctuation': {\r\n\t\tpattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\r\n\t\tlookbehind: true\r\n\t}\r\n};\r\nPrism.languages.rip = {\r\n\t'comment': /#.*/,\r\n\r\n\t'keyword': /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\r\n\r\n\t'builtin': /@|\\bSystem\\b/,\r\n\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\r\n\t'date': /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\r\n\t'time': /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\r\n\t'datetime': /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\r\n\r\n\t'character': /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\r\n\r\n\t'regex': {\r\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true\r\n\t},\r\n\r\n\t'symbol': /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\r\n\t'string': {\r\n\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\r\n\r\n\t'punctuation': /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\r\n\r\n\t'reference': /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\r\n};\r\n\r\nPrism.languages.roboconf = {\r\n\t'comment': /#.*/,\r\n\t'keyword': {\r\n\t\t'pattern': /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'component': {\r\n\t\tpattern: /[\\w-]+(?=[ \\t]*\\{)/,\r\n\t\talias: 'variable'\r\n\t},\r\n\t'property': /[\\w.-]+(?=[ \\t]*:)/,\r\n\t'value': {\r\n\t\tpattern: /(=[ \\t]*)[^,;]+/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'attr-value'\r\n\t},\r\n\t'optional': {\r\n\t\tpattern: /\\(optional\\)/,\r\n\t\talias: 'builtin'\r\n\t},\r\n\t'wildcard': {\r\n\t\tpattern: /(\\.)\\*/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'punctuation': /[{},.;:=]/\r\n};\r\n(function(Prism) {\r\n\tPrism.languages.crystal = Prism.languages.extend('ruby', {\r\n\t\tkeyword: [\r\n\t\t\t/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/,\r\n\t\t\t{\r\n\t\t\t\tpattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t}\r\n\t\t],\r\n\r\n\t\tnumber: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[0-9a-fA-F_]*[0-9a-fA-F]|(?:\\d(?:[0-9_]*\\d)?)(?:\\.[0-9_]*\\d)?(?:[eE][+-]?[0-9_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\r\n\t});\r\n\r\n\tvar rest = Prism.util.clone(Prism.languages.crystal);\r\n\r\n\tPrism.languages.insertBefore('crystal', 'string', {\r\n\t\tattribute: {\r\n\t\t\tpattern: /@\\[.+?\\]/,\r\n\t\t\talias: 'attr-name',\r\n\t\t\tinside: {\r\n\t\t\t\tdelimiter: {\r\n\t\t\t\t\tpattern: /^@\\[|\\]$/,\r\n\t\t\t\t\talias: 'tag'\r\n\t\t\t\t},\r\n\t\t\t\trest: rest\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\texpansion: [\r\n\t\t{\r\n\t\t\tpattern: /\\{\\{.+?\\}\\}/,\r\n\t\t\tinside: {\r\n\t\t\t\tdelimiter: {\r\n\t\t\t\t\tpattern: /^\\{\\{|\\}\\}$/,\r\n\t\t\t\t\talias: 'tag'\r\n\t\t\t\t},\r\n\t\t\t\trest: rest\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /\\{%.+?%\\}/,\r\n\t\t\tinside: {\r\n\t\t\t\tdelimiter: {\r\n\t\t\t\t\tpattern: /^\\{%|%\\}$/,\r\n\t\t\t\t\talias: 'tag'\r\n\t\t\t\t},\r\n\t\t\t\trest: rest\r\n\t\t\t}\r\n\t\t}\r\n\t\t]\r\n\t});\r\n\r\n}(Prism));\r\n\r\n/* TODO\r\n\tAdd support for Markdown notation inside doc comments\r\n\tAdd support for nested block comments...\r\n\tMatch closure params even when not followed by dash or brace\r\n\tAdd better support for macro definition\r\n*/\r\n\r\nPrism.languages.rust = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'string': [\r\n\t\t{\r\n\t\t\tpattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /b?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'keyword': /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\r\n\r\n\t'attribute': {\r\n\t\tpattern: /#!?\\[.+?\\]/,\r\n\t\tgreedy: true,\r\n\t\talias: 'attr-name'\r\n\t},\r\n\r\n\t'function': [\r\n\t\t/\\w+(?=\\s*\\()/,\r\n\t\t// Macros can use parens or brackets\r\n\t\t/\\w+!(?=\\s*\\(|\\[)/\r\n\t],\r\n\t'macro-rules': {\r\n\t\tpattern: /\\w+!/,\r\n\t\talias: 'function'\r\n\t},\r\n\r\n\t// Hex, oct, bin, dec numbers with visual separators and type suffix\r\n\t'number': /\\b-?(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\r\n\r\n\t// Closure params should not be confused with bitwise OR |\r\n\t'closure-params': {\r\n\t\tpattern: /\\|[^|]*\\|(?=\\s*[{-])/,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /[|:,]/,\r\n\t\t\t'operator': /[&*]/\r\n\t\t}\r\n\t},\r\n\t'punctuation': /[{}[\\];(),:]|\\.+|->/,\r\n\t'operator': /[-+*\\/%!^=]=?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\r\n};\r\nPrism.languages.sas = {\r\n\t'datalines': {\r\n\t\tpattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\r\n\t\talias: 'string',\r\n\t\tinside: {\r\n\t\t\t'keyword': {\r\n\t\t\t\tpattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'punctuation': /;/\r\n\t\t}\r\n\t},\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^\\s*|;\\s*)\\*.*;/m,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t/\\/\\*[\\s\\S]+?\\*\\//\r\n\t],\r\n\t'datetime': {\r\n\t\t// '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\r\n\t\tpattern: /'[^']+'(?:dt?|t)\\b/i,\r\n\t\talias: 'number'\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'keyword': /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then)\\b/i,\r\n\t// Decimal (1.2e23), hexadecimal (0c1x)\r\n\t'number': /(?:\\B-|\\b)(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\r\n\t'operator': /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\r\n\t'punctuation': /[$%@.(){}\\[\\];,\\\\]/\r\n};\r\n\r\n(function(Prism) {\r\n\tPrism.languages.sass = Prism.languages.extend('css', {\r\n\t\t// Sass comments don't need to be closed, only indented\r\n\t\t'comment': {\r\n\t\t\tpattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('sass', 'atrule', {\r\n\t\t// We want to consume the whole line\r\n\t\t'atrule-line': {\r\n\t\t\t// Includes support for = and + shortcuts\r\n\t\t\tpattern: /^(?:[ \\t]*)[@+=].+/m,\r\n\t\t\tinside: {\r\n\t\t\t\t'atrule': /(?:@[\\w-]+|[+=])/m\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tdelete Prism.languages.sass.atrule;\r\n\r\n\r\n\tvar variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\r\n\tvar operator = [\r\n\t\t/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/,\r\n\t\t{\r\n\t\t\tpattern: /(\\s+)-(?=\\s)/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t];\r\n\r\n\tPrism.languages.insertBefore('sass', 'property', {\r\n\t\t// We want to consume the whole line\r\n\t\t'variable-line': {\r\n\t\t\tpattern: /^[ \\t]*\\$.+/m,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /:/,\r\n\t\t\t\t'variable': variable,\r\n\t\t\t\t'operator': operator\r\n\t\t\t}\r\n\t\t},\r\n\t\t// We want to consume the whole line\r\n\t\t'property-line': {\r\n\t\t\tpattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\r\n\t\t\tinside: {\r\n\t\t\t\t'property': [\r\n\t\t\t\t\t/[^:\\s]+(?=\\s*:)/,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /(:)[^:\\s]+/,\r\n\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t'punctuation': /:/,\r\n\t\t\t\t'variable': variable,\r\n\t\t\t\t'operator': operator,\r\n\t\t\t\t'important': Prism.languages.sass.important\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tdelete Prism.languages.sass.property;\r\n\tdelete Prism.languages.sass.important;\r\n\r\n\t// Now that whole lines for other patterns are consumed,\r\n\t// what's left should be selectors\r\n\tdelete Prism.languages.sass.selector;\r\n\tPrism.languages.insertBefore('sass', 'punctuation', {\r\n\t\t'selector': {\r\n\t\t\tpattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t});\r\n\r\n}(Prism));\r\nPrism.languages.scss = Prism.languages.extend('css', {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'atrule': {\r\n\t\tpattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\r\n\t\tinside: {\r\n\t\t\t'rule': /@[\\w-]+/\r\n\t\t\t// See rest below\r\n\t\t}\r\n\t},\r\n\t// url, compassified\r\n\t'url': /(?:[-a-z]+-)*url(?=\\()/i,\r\n\t// CSS selector regex is not appropriate for Sass\r\n\t// since there can be lot more things (var, @ directive, nesting..)\r\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\r\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\r\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\r\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\r\n\t// this one was hard to do, so please be careful if you edit this one :)\r\n\t'selector': {\r\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\r\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\r\n\t\tinside: {\r\n\t\t\t'parent': {\r\n\t\t\t\tpattern: /&/,\r\n\t\t\t\talias: 'important'\r\n\t\t\t},\r\n\t\t\t'placeholder': /%[-\\w]+/,\r\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\r\n\t\t}\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('scss', 'atrule', {\r\n\t'keyword': [\r\n\t\t/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\r\n\t\t{\r\n\t\t\tpattern: /( +)(?:from|through)(?= )/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t]\r\n});\r\n\r\nPrism.languages.scss.property = {\r\n\tpattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\r\n\tinside: {\r\n\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\r\n\t}\r\n};\r\n\r\nPrism.languages.insertBefore('scss', 'important', {\r\n\t// var and interpolated vars\r\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\r\n});\r\n\r\nPrism.languages.insertBefore('scss', 'function', {\r\n\t'placeholder': {\r\n\t\tpattern: /%[-\\w]+/,\r\n\t\talias: 'selector'\r\n\t},\r\n\t'statement': {\r\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\r\n\t\talias: 'keyword'\r\n\t},\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\t'null': /\\bnull\\b/,\r\n\t'operator': {\r\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\r\n\t\tlookbehind: true\r\n\t}\r\n});\r\n\r\nPrism.languages.scss['atrule'].inside.rest = Prism.util.clone(Prism.languages.scss);\r\nPrism.languages.scala = Prism.languages.extend('java', {\r\n\t'keyword': /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\r\n\t'string': [\r\n\t\t{\r\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'builtin': /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\r\n\t'number': /\\b(?:0x[\\da-f]*\\.?[\\da-f]+|\\d*\\.?\\d+e?\\d*[dfl]?)\\b/i,\r\n\t'symbol': /'[^\\d\\s\\\\]\\w*/\r\n});\r\ndelete Prism.languages.scala['class-name'];\r\ndelete Prism.languages.scala['function'];\r\n\r\nPrism.languages.scheme = {\r\n\t'comment' : /;.*/,\r\n\t'string' :  {\r\n\t\tpattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'keyword' : {\r\n\t\tpattern : /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\r\n\t\tlookbehind : true\r\n\t},\r\n\t'builtin' : {\r\n\t\tpattern :  /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\r\n\t\tlookbehind : true\r\n\t},\r\n\t'number' : {\r\n\t\tpattern: /(\\s|\\))[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'boolean' : /#[tf]/,\r\n\t'operator': {\r\n\t\tpattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'function' : {\r\n\t\tpattern : /(\\()[^\\s()]*(?=\\s)/,\r\n\t\tlookbehind : true\r\n\t},\r\n\t'punctuation' : /[()]/\r\n};\r\nPrism.languages.smalltalk = {\r\n\t'comment': /\"(?:\"\"|[^\"])+\"/,\r\n\t'string': /'(?:''|[^'])+'/,\r\n\t'symbol': /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\r\n\t'block-arguments': {\r\n\t\tpattern: /(\\[\\s*):[^\\[|]*\\|/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'variable': /:[\\da-z]+/i,\r\n\t\t\t'punctuation': /\\|/\r\n\t\t}\r\n\t},\r\n\t'temporary-variables': {\r\n\t\tpattern: /\\|[^|]+\\|/,\r\n\t\tinside: {\r\n\t\t\t'variable': /[\\da-z]+/i,\r\n\t\t\t'punctuation': /\\|/\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(?:nil|true|false|self|super|new)\\b/,\r\n\t'character': {\r\n\t\tpattern: /\\$./,\r\n\t\talias: 'string'\r\n\t},\r\n\t'number': [\r\n\t\t/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\r\n\t\t/(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\r\n\t],\r\n\t'operator': /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\r\n\t'punctuation': /[.;:?\\[\\](){}]/\r\n};\r\n/* TODO\r\n\tAdd support for variables inside double quoted strings\r\n\tAdd support for {php}\r\n*/\r\n\r\n(function(Prism) {\r\n\r\n\tvar smarty_pattern = /\\{\\*[\\s\\S]+?\\*\\}|\\{[\\s\\S]+?\\}/g;\r\n\tvar smarty_litteral_start = '{literal}';\r\n\tvar smarty_litteral_end = '{/literal}';\r\n\tvar smarty_litteral_mode = false;\r\n\r\n\tPrism.languages.smarty = Prism.languages.extend('markup', {\r\n\t\t'smarty': {\r\n\t\t\tpattern: smarty_pattern,\r\n\t\t\tinside: {\r\n\t\t\t\t'delimiter': {\r\n\t\t\t\t\tpattern: /^\\{|\\}$/i,\r\n\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t},\r\n\t\t\t\t'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\t\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][-+]?\\d+)?)\\b/,\r\n\t\t\t\t'variable': [\r\n\t\t\t\t\t/\\$(?!\\d)\\w+/,\r\n\t\t\t\t\t/#(?!\\d)\\w+#/,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /(\\.|->)(?!\\d)\\w+/,\r\n\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\r\n\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t'function': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /(\\|\\s*)@?(?!\\d)\\w+/,\r\n\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t/^\\/?(?!\\d)\\w+/,\r\n\t\t\t\t\t/(?!\\d)\\w+(?=\\()/\r\n\t\t\t\t],\r\n\t\t\t\t'attr-name': {\r\n\t\t\t\t\t// Value is made optional because it may have already been tokenized\r\n\t\t\t\t\tpattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\"variable\": {\r\n\t\t\t\t\t\t\tpattern: /(=\\s*)(?!\\d)\\w+/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"operator\": /=/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'punctuation': [\r\n\t\t\t\t\t/[\\[\\]().,:`]|->/\r\n\t\t\t\t],\r\n\t\t\t\t'operator': [\r\n\t\t\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\r\n\t\t\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\r\n\t\t\t\t\t/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\r\n\t\t\t\t],\r\n\t\t\t\t'keyword': /\\b(?:false|off|on|no|true|yes)\\b/\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Comments are inserted at top so that they can\r\n\t// surround markup\r\n\tPrism.languages.insertBefore('smarty', 'tag', {\r\n\t\t'smarty-comment': {\r\n\t\t\tpattern: /\\{\\*[\\s\\S]*?\\*\\}/,\r\n\t\t\talias: ['smarty','comment']\r\n\t\t}\r\n\t});\r\n\r\n\t// Tokenize all inline Smarty expressions\r\n\tPrism.hooks.add('before-highlight', function(env) {\r\n\t\tif (env.language !== 'smarty') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tenv.tokenStack = [];\r\n\r\n\t\tenv.backupCode = env.code;\r\n\t\tenv.code = env.code.replace(smarty_pattern, function(match) {\r\n\r\n\t\t\t// Smarty tags inside {literal} block are ignored\r\n\t\t\tif(match === smarty_litteral_end) {\r\n\t\t\t\tsmarty_litteral_mode = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(!smarty_litteral_mode) {\r\n\t\t\t\tif(match === smarty_litteral_start) {\r\n\t\t\t\t\tsmarty_litteral_mode = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar i = env.tokenStack.length;\r\n\t\t\t\t// Check for existing strings\r\n\t\t\t\twhile (env.backupCode.indexOf('___SMARTY' + i + '___') !== -1)\r\n\t\t\t\t\t++i;\r\n\r\n\t\t\t\t// Create a sparse array\r\n\t\t\t\tenv.tokenStack[i] = match;\r\n\r\n\t\t\t\treturn '___SMARTY' + i + '___';\r\n\t\t\t}\r\n\t\t\treturn match;\r\n\t\t});\r\n\t});\r\n\r\n\t// Restore env.code for other plugins (e.g. line-numbers)\r\n\tPrism.hooks.add('before-insert', function(env) {\r\n\t\tif (env.language === 'smarty') {\r\n\t\t\tenv.code = env.backupCode;\r\n\t\t\tdelete env.backupCode;\r\n\t\t}\r\n\t});\r\n\r\n\t// Re-insert the tokens after highlighting\r\n\t// and highlight them with defined grammar\r\n\tPrism.hooks.add('after-highlight', function(env) {\r\n\t\tif (env.language !== 'smarty') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, keys = Object.keys(env.tokenStack); i < keys.length; ++i) {\r\n\t\t\tvar k = keys[i];\r\n\t\t\tvar t = env.tokenStack[k];\r\n\r\n\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns\r\n\t\t\tenv.highlightedCode = env.highlightedCode.replace('___SMARTY' + k + '___', Prism.highlight(t, env.grammar, 'smarty').replace(/\\$/g, '$$$$'));\r\n\t\t}\r\n\r\n\t\tenv.element.innerHTML = env.highlightedCode;\r\n\t});\r\n\r\n}(Prism));\r\nPrism.languages.sql= {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string' : {\r\n\t\tpattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,\r\n\t\tgreedy: true,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'variable': /@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\r\n\t'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?\r\n\t'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATE(?:TIME)?|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITER(?:S)?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\r\n\t'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\r\n\t'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,\r\n\t'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n\t'punctuation': /[;[\\]()`,.]/\r\n};\r\n(function (Prism) {\r\n\tvar inside = {\r\n\t\t'url': /url\\(([\"']?).*?\\1\\)/i,\r\n\t\t'string': {\r\n\t\t\tpattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'interpolation': null, // See below\r\n\t\t'func': null, // See below\r\n\t\t'important': /\\B!(?:important|optional)\\b/i,\r\n\t\t'keyword': {\r\n\t\t\tpattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'hexcode': /#[\\da-f]{3,6}/i,\r\n\t\t'number': /\\b\\d+(?:\\.\\d+)?%?/,\r\n\t\t'boolean': /\\b(?:true|false)\\b/,\r\n\t\t'operator': [\r\n\t\t\t// We want non-word chars around \"-\" because it is\r\n\t\t\t// accepted in property names.\r\n\t\t\t/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\r\n\t\t],\r\n\t\t'punctuation': /[{}()\\[\\];:,]/\r\n\t};\r\n\r\n\tinside['interpolation'] = {\r\n\t\tpattern: /\\{[^\\r\\n}:]+\\}/,\r\n\t\talias: 'variable',\r\n\t\tinside: Prism.util.clone(inside)\r\n\t};\r\n\tinside['func'] = {\r\n\t\tpattern: /[\\w-]+\\([^)]*\\).*/,\r\n\t\tinside: {\r\n\t\t\t'function': /^[^(]+/,\r\n\t\t\trest: Prism.util.clone(inside)\r\n\t\t}\r\n\t};\r\n\r\n\tPrism.languages.stylus = {\r\n\t\t'comment': {\r\n\t\t\tpattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'atrule-declaration': {\r\n\t\t\tpattern: /(^\\s*)@.+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'atrule': /^@[\\w-]+/,\r\n\t\t\t\trest: inside\r\n\t\t\t}\r\n\t\t},\r\n\t\t'variable-declaration': {\r\n\t\t\tpattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'variable': /^\\S+/,\r\n\t\t\t\trest: inside\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'statement': {\r\n\t\t\tpattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\tkeyword: /^\\S+/,\r\n\t\t\t\trest: inside\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// A property/value pair cannot end with a comma or a brace\r\n\t\t// It cannot have indented content unless it ended with a semicolon\r\n\t\t'property-declaration': {\r\n\t\t\tpattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'property': {\r\n\t\t\t\t\tpattern: /^[^\\s:]+/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'interpolation': inside.interpolation\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\trest: inside\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\r\n\t\t// A selector can contain parentheses only as part of a pseudo-element\r\n\t\t// It can span multiple lines.\r\n\t\t// It must end with a comma or an accolade or have indented content.\r\n\t\t'selector': {\r\n\t\t\tpattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': inside.interpolation,\r\n\t\t\t\t'punctuation': /[{},]/\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'func': inside.func,\r\n\t\t'string': inside.string,\r\n\t\t'interpolation': inside.interpolation,\r\n\t\t'punctuation': /[{}()\\[\\];:.]/\r\n\t};\r\n}(Prism));\r\n// issues: nested multiline comments\r\nPrism.languages.swift = Prism.languages.extend('clike', {\r\n\t'string': {\r\n\t\tpattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\tdelimiter: {\r\n\t\t\t\t\t\tpattern: /^\\\\\\(|\\)$/,\r\n\t\t\t\t\t\talias: 'variable'\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// See rest below\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|Protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\r\n\t'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\r\n\t'constant': /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\r\n\t'atrule': /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\r\n\t'builtin': /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\r\n});\r\nPrism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.util.clone(Prism.languages.swift);\r\nPrism.languages.tcl = {\r\n\t'comment': {\r\n\t\tpattern: /(^|[^\\\\])#.*/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'variable': [\r\n\t\t{\r\n\t\t\tpattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\\$){[^}]+}/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'function': {\r\n\t\tpattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'builtin': [\r\n\t\t{\r\n\t\t\tpattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t/\\b(?:elseif|else)\\b/\r\n\t],\r\n\t'scope': {\r\n\t\tpattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'constant'\r\n\t},\r\n\t'keyword': {\r\n\t\tpattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'operator': /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\r\n\t'punctuation': /[{}()\\[\\]]/\r\n};\r\n\r\n(function(Prism) {\r\n\t// We don't allow for pipes inside parentheses\r\n\t// to not break table pattern |(. foo |). bar |\r\n\tvar modifierRegex = '(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+';\r\n\tvar modifierTokens = {\r\n\t\t'css': {\r\n\t\t\tpattern: /\\{[^}]+\\}/,\r\n\t\t\tinside: {\r\n\t\t\t\trest: Prism.languages.css\r\n\t\t\t}\r\n\t\t},\r\n\t\t'class-id': {\r\n\t\t\tpattern: /(\\()[^)]+(?=\\))/,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'attr-value'\r\n\t\t},\r\n\t\t'lang': {\r\n\t\t\tpattern: /(\\[)[^\\]]+(?=\\])/,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'attr-value'\r\n\t\t},\r\n\t\t// Anything else is punctuation (the first pattern is for row/col spans inside tables)\r\n\t\t'punctuation': /[\\\\\\/]\\d+|\\S/\r\n\t};\r\n\r\n\r\n\tPrism.languages.textile = Prism.languages.extend('markup', {\r\n\t\t'phrase': {\r\n\t\t\tpattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\r\n\t\t\t\t// h1. Header 1\r\n\t\t\t\t'block-tag': {\r\n\t\t\t\t\tpattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'modifier': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'tag': /^[a-z]\\w*/,\r\n\t\t\t\t\t\t'punctuation': /\\.$/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// # List item\r\n\t\t\t\t// * List item\r\n\t\t\t\t'list': {\r\n\t\t\t\t\tpattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'modifier': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^[*#]+)' + modifierRegex),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': /^[*#]+/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// | cell | cell | cell |\r\n\t\t\t\t'table': {\r\n\t\t\t\t\t// Modifiers can be applied to the row: {color:red}.|1|2|3|\r\n\t\t\t\t\t// or the cell: |{color:red}.1|2|3|\r\n\t\t\t\t\tpattern: RegExp('^(?:(?:' + modifierRegex + '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|', 'm'),\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'modifier': {\r\n\t\t\t\t\t\t\t// Modifiers for rows after the first one are\r\n\t\t\t\t\t\t\t// preceded by a pipe and a line feed\r\n\t\t\t\t\t\t\tpattern: RegExp('(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': /\\||^\\./\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t'inline': {\r\n\t\t\t\t\tpattern: RegExp('(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'),\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t// Note: superscripts and subscripts are not handled specifically\r\n\r\n\t\t\t\t\t\t// *bold*, **bold**\r\n\t\t\t\t\t\t'bold': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t// _italic_, __italic__\r\n\t\t\t\t\t\t'italic': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t// ??cite??\r\n\t\t\t\t\t\t'cite': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\talias: 'string'\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t// @code@\r\n\t\t\t\t\t\t'code': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\talias: 'keyword'\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t// +inserted+\r\n\t\t\t\t\t\t'inserted': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t// -deleted-\r\n\t\t\t\t\t\t'deleted': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t// %span%\r\n\t\t\t\t\t\t'span': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t'modifier': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': /[*_%?@+\\-^~]+/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// [alias]http://example.com\r\n\t\t\t\t'link-ref': {\r\n\t\t\t\t\tpattern: /^\\[[^\\]]+\\]\\S+$/m,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'string': {\r\n\t\t\t\t\t\t\tpattern: /(\\[)[^\\]]+(?=\\])/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'url': {\r\n\t\t\t\t\t\t\tpattern: /(\\])\\S+$/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': /[\\[\\]]/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// \"text\":http://example.com\r\n\t\t\t\t// \"text\":link-ref\r\n\t\t\t\t'link': {\r\n\t\t\t\t\tpattern: RegExp('\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'text': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'modifier': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^\")' + modifierRegex),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'url': {\r\n\t\t\t\t\t\t\tpattern: /(:).+/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': /[\":]/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// !image.jpg!\r\n\t\t\t\t// !image.jpg(Title)!:http://example.com\r\n\t\t\t\t'image': {\r\n\t\t\t\t\tpattern: RegExp('!(?:' + modifierRegex + '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'),\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'source': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^!(?:' + modifierRegex + '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\talias: 'url'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'modifier': {\r\n\t\t\t\t\t\t\tpattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'url': {\r\n\t\t\t\t\t\t\tpattern: /(:).+/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': /[!:]/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Footnote[1]\r\n\t\t\t\t'footnote': {\r\n\t\t\t\t\tpattern: /\\b\\[\\d+\\]/,\r\n\t\t\t\t\talias: 'comment',\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'punctuation': /\\[|\\]/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// CSS(Cascading Style Sheet)\r\n\t\t\t\t'acronym': {\r\n\t\t\t\t\tpattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'comment': {\r\n\t\t\t\t\t\t\tpattern: /(\\()[^)]+(?=\\))/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': /[()]/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Prism(C)\r\n\t\t\t\t'mark': {\r\n\t\t\t\t\tpattern: /\\b\\((?:TM|R|C)\\)/,\r\n\t\t\t\t\talias: 'comment',\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'punctuation':/[()]/\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tvar nestedPatterns = {\r\n\t\t'inline': Prism.util.clone(Prism.languages.textile['phrase'].inside['inline']),\r\n\t\t'link': Prism.util.clone(Prism.languages.textile['phrase'].inside['link']),\r\n\t\t'image': Prism.util.clone(Prism.languages.textile['phrase'].inside['image']),\r\n\t\t'footnote': Prism.util.clone(Prism.languages.textile['phrase'].inside['footnote']),\r\n\t\t'acronym': Prism.util.clone(Prism.languages.textile['phrase'].inside['acronym']),\r\n\t\t'mark': Prism.util.clone(Prism.languages.textile['phrase'].inside['mark'])\r\n\t};\r\n\r\n\t// Only allow alpha-numeric HTML tags, not XML tags\r\n\tPrism.languages.textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\r\n\r\n\t// Allow some nesting\r\n\tPrism.languages.textile['phrase'].inside['inline'].inside['bold'].inside = nestedPatterns;\r\n\tPrism.languages.textile['phrase'].inside['inline'].inside['italic'].inside = nestedPatterns;\r\n\tPrism.languages.textile['phrase'].inside['inline'].inside['inserted'].inside = nestedPatterns;\r\n\tPrism.languages.textile['phrase'].inside['inline'].inside['deleted'].inside = nestedPatterns;\r\n\tPrism.languages.textile['phrase'].inside['inline'].inside['span'].inside = nestedPatterns;\r\n\r\n\t// Allow some styles inside table cells\r\n\tPrism.languages.textile['phrase'].inside['table'].inside['inline'] = nestedPatterns['inline'];\r\n\tPrism.languages.textile['phrase'].inside['table'].inside['link'] = nestedPatterns['link'];\r\n\tPrism.languages.textile['phrase'].inside['table'].inside['image'] = nestedPatterns['image'];\r\n\tPrism.languages.textile['phrase'].inside['table'].inside['footnote'] = nestedPatterns['footnote'];\r\n\tPrism.languages.textile['phrase'].inside['table'].inside['acronym'] = nestedPatterns['acronym'];\r\n\tPrism.languages.textile['phrase'].inside['table'].inside['mark'] = nestedPatterns['mark'];\r\n\r\n}(Prism));\r\nPrism.languages.twig = {\r\n\t'comment': /\\{#[\\s\\S]*?#\\}/,\r\n\t'tag': {\r\n\t\tpattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\r\n\t\tinside: {\r\n\t\t\t'ld': {\r\n\t\t\t\tpattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^(?:\\{\\{|\\{%)-?/,\r\n\t\t\t\t\t'keyword': /\\w+/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'rd': {\r\n\t\t\t\tpattern: /-?(?:%\\}|\\}\\})$/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /.*/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': {\r\n\t\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^['\"]|['\"]$/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'keyword': /\\b(?:even|if|odd)\\b/,\r\n\t\t\t'boolean': /\\b(?:true|false|null)\\b/,\r\n\t\t\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][-+]?\\d+)?)\\b/,\r\n\t\t\t'operator': [\r\n\t\t\t\t{\r\n\t\t\t\t\tpattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\r\n\t\t\t\t\tlookbehind: true\r\n\t\t\t\t},\r\n\t\t\t\t/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\r\n\t\t\t],\r\n\t\t\t'property': /\\b[a-zA-Z_]\\w*\\b/,\r\n\t\t\t'punctuation': /[()\\[\\]{}:.,]/\r\n\t\t}\r\n\t},\r\n\r\n\t// The rest can be parsed as HTML\r\n\t'other': {\r\n\t\t// We want non-blank matches\r\n\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,\r\n\t\tinside: Prism.languages.markup\r\n\t}\r\n};\r\n\r\nPrism.languages.typescript = Prism.languages.extend('javascript', {\r\n\t// From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\r\n\t'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|false|true|module|declare|constructor|string|Function|any|number|boolean|Array|symbol|namespace|abstract|require|type)\\b/\r\n});\r\n\r\nPrism.languages.ts = Prism.languages.typescript;\r\nPrism.languages.vbnet = Prism.languages.extend(\"basic\", {\r\n\t'keyword': /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(?:!|REM\\b).+/i,\r\n\t\t\tinside: {\r\n\t\t\t\t'keyword': /^REM/i\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\:])'.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t]\r\n});\r\n\r\nPrism.languages.verilog = {\r\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n  'string': {\r\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\r\n    greedy: true\r\n  },\r\n  // support for any kernel function (ex: $display())\r\n  'property': /\\B\\$\\w+\\b/,\r\n  // support for user defined constants (ex: `define)\r\n  'constant': /\\B`\\w+\\b/,\r\n  'function': /\\w+(?=\\()/,\r\n  // support for verilog and system verilog keywords\r\n  'keyword': /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\r\n  // bold highlighting for all verilog and system verilog logic blocks\r\n  'important': /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\r\n  // support for time ticks, vectors, and real numbers\r\n  'number': /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\r\n  'operator': /[-+{}^~%*\\/?=!<>&|]+/,\r\n  'punctuation': /[[\\];(),.:]/\r\n};\r\nPrism.languages.vhdl = {\r\n\t'comment': /--.+/,\r\n\t// support for all logic vectors\r\n\t'vhdl-vectors': {\r\n\t\t'pattern': /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\r\n\t\t'alias': 'number'\r\n\t},\r\n\t// support for operator overloading included\r\n\t'quoted-function': {\r\n\t\tpattern: /\"\\S+?\"(?=\\()/,\r\n\t\talias: 'function'\r\n\t},\r\n\t'string': /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\r\n\t'constant': /\\b(?:use|library)\\b/i,\r\n\t// support for predefined attributes included\r\n\t'keyword': /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\r\n\t'boolean': /\\b(?:true|false)\\b/i,\r\n\t'function': /\\w+(?=\\()/,\r\n\t// decimal, based, physical, and exponential numbers supported\r\n\t'number': /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\r\n\t'operator': /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\r\n\t'punctuation': /[{}[\\];(),.:]/\r\n};\r\n\r\nPrism.languages.vim = {\r\n\t'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\r\n\t'comment': /\".*/,\r\n\t'function': /\\w+(?=\\()/,\r\n\t'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\r\n\t'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\r\n\t'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\r\n\t'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\r\n\t'punctuation': /[{}[\\](),;:]/\r\n};\r\nPrism.languages.wiki = Prism.languages.extend('markup', {\r\n\t'block-comment': {\r\n\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\tlookbehind: true,\r\n\t\talias: 'comment'\r\n\t},\r\n\t'heading': {\r\n\t\tpattern: /^(=+).+?\\1/m,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /^=+|=+$/,\r\n\t\t\t'important': /.+/\r\n\t\t}\r\n\t},\r\n\t'emphasis': {\r\n\t\t// TODO Multi-line\r\n\t\tpattern: /('{2,5}).+?\\1/,\r\n\t\tinside: {\r\n\t\t\t'bold italic': {\r\n\t\t\t\tpattern: /(''''').+?(?=\\1)/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'bold': {\r\n\t\t\t\tpattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'italic': {\r\n\t\t\t\tpattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t},\r\n\t\t\t'punctuation': /^''+|''+$/\r\n\t\t}\r\n\t},\r\n\t'hr': {\r\n\t\tpattern: /^-{4,}/m,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t'url': [\r\n\t\t/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i,\r\n\t\t/\\[\\[.+?\\]\\]|\\[.+?\\]/\r\n\t],\r\n\t'variable': [\r\n\t\t/__[A-Z]+__/,\r\n\t\t// FIXME Nested structures should be handled\r\n\t\t// {{formatnum:{{#expr:{{{3}}}}}}}\r\n\t\t/\\{{3}.+?\\}{3}/,\r\n\t\t/\\{\\{.+?\\}\\}/\r\n\t],\r\n\t'symbol': [\r\n\t\t/^#redirect/im,\r\n\t\t/~{3,5}/\r\n\t],\r\n\t// Handle table attrs:\r\n\t// {|\r\n\t// ! style=\"text-align:left;\"| Item\r\n\t// |}\r\n\t'table-tag': {\r\n\t\tpattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'table-bar': {\r\n\t\t\t\tpattern: /\\|$/,\r\n\t\t\t\talias: 'punctuation'\r\n\t\t\t},\r\n\t\t\trest: Prism.languages.markup['tag'].inside\r\n\t\t}\r\n\t},\r\n\t'punctuation': /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\r\n});\r\n\r\nPrism.languages.insertBefore('wiki', 'tag', {\r\n\t// Prevent highlighting inside <nowiki>, <source> and <pre> tags\r\n\t'nowiki': {\r\n\t\tpattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\r\n\t\tinside: {\r\n\t\t\t'tag': {\r\n\t\t\t\tpattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\r\n\t\t\t\tinside: Prism.languages.markup['tag'].inside\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nPrism.languages.xojo = {\r\n\t'comment': {\r\n\t\tpattern: /(?:'|\\/\\/|Rem\\b).+/i,\r\n\t\tinside: {\r\n\t\t\t'keyword': /^Rem/i\r\n\t\t}\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /\"(?:\"\"|[^\"])*\"/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': [\r\n\t\t/(?:\\b|\\B[.-])(?:\\d+\\.?\\d*)(?:E[+-]?\\d+)?/i,\r\n\t\t/&[bchou][a-z\\d]+/i\r\n\t],\r\n\t'symbol': /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\r\n\t'keyword': /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\r\n\t'operator': /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\r\n\t'punctuation': /[.,;:()]/\r\n};\r\nPrism.languages.yaml = {\r\n\t'scalar': {\r\n\t\tpattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'string'\r\n\t},\r\n\t'comment': /#.*/,\r\n\t'key': {\r\n\t\tpattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'atrule'\r\n\t},\r\n\t'directive': {\r\n\t\tpattern: /(^[ \\t]*)%.+/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'important'\r\n\t},\r\n\t'datetime': {\r\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'number'\r\n\t},\r\n\t'boolean': {\r\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\r\n\t\tlookbehind: true,\r\n\t\talias: 'important'\r\n\t},\r\n\t'null': {\r\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\r\n\t\tlookbehind: true,\r\n\t\talias: 'important'\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': {\r\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+\\-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'tag': /![^\\s]+/,\r\n\t'important': /[&*][\\w]+/,\r\n\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\r\n};\r\n\r\n"]}